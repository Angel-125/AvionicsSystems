<PropConfig>
	<!--
	This file is a prop configuration template for the Prop Config utility
	described on the MAS wiki at https://github.com/MOARdV/AvionicsSystems/wiki/Prop-Config

	The tool and this XML file are used to quickly generate multiple props
	without the tedious effort of copying config files and making small edits
	while hoping you didn't overlook something.

	Copyright (c) 2018 MOARdV

	This file is licensed by MOARdV under the Creative Commons Attribution-Share Alike
	4.0 International license (CC BY-SA) https://creativecommons.org/licenses/by-sa/4.0/
	-->

	<!--
	Contemporary highly-configurable push buttons

	TODO: Use a better style naming convention

	Styles:

	Undecorated Black Full Cap:
	- No Border / No Caption / Collider
	Two lines of text.  Top Text is standard white legend, lower text is colored status.  eg. Action Group buttons

	One Mode Bordered White Button:
	- Backlight 5 (3/4 border + caption) / Collider
	Center legend is white text with green bullets.  eg. Clear Node button

	One Mode Covered White Button:
	- Backlight 6 (3/4 border + caption) / Cover 2 / Collider
	
	One Mode Bordered Color Button:
	- Backlight 5 (3/4 border + caption) / Collider
	Center legend is green text with green bullets.  eg. Arm Parachute button

	Two Mode Bordered Button:
	- Backlight 2 (full border) / No Caption / Collider
	Top and bottom legend are white text with green bullets.

	Two Mode Bordered on-off Button:
	- Backlight 5 (3/4 border + caption) / Collider
	Top legend + bullets amber, bottom legend + bullets green.  eg On/Off toggles, Brakes, SAS, RCS.

	Two Mode Bordered Captioned Button:
	- Backlight 5 (3/4 border + caption) / Collider
	Top and bottom legend white text, bullets green.  For two-state non-on/off toggles.

	One Status Bordered Lamp:
	- Backlight 2 (full border) / no collider
	Center legend and bullets amber.  For single-state status lamps.  eg, warp rate.

	Two Status Bordered Lamp:
	- Backlight 2 (full border) / no collider
	Top legend + bullets amber, bottom legend + bullets green.

	Split Detail Status Lamp:
	- No border / no collider / horizontal split cap
	Top legend green, bottom legend green and blended brightness.

	Vertical Detail Status Lamp:
	- No border / no collider / vertical split cap
	Left legend green, right legend green and blended brightness.

	MechJeb Program Button:
	- Backlight 5 (3/4 border + caption) / Collider
	Top legend white text.  Middle legend / bullets red (error).  Bottom legend / bullets green (OK).
	Used for the control panel MechJeb programming.

	MechJeb Sequence Button:
	- Backlight 5 (3/4 border + caption) / Collider
	Top legend white text.  Bottom legend / bullets green (OK).
	Used for the control panel MechJeb sequence (autopilot) switches.

	MechJeb Keypad Button:
	- No border / No Caption / Collider
	Center large legend white text.
	Used for the control panel MechJeb keypad buttons.

	MechJeb Mode Button:
	- No border / No Caption / Collider
	Top and optional center legend white text.  Bottom legend / bullets green (SEL)
	
	SAS Mode Button:
	- No border / No Caption / Collider
	Top and center legend white text.  Bottom legend / bullets green (SEL)
	-->
	<PushButton folder="Push_Button_Modular">
		<style name="Undecorated Black Full Cap">
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>● ON ●</text>
			</TEXT_LABEL>
		</style>
		<prop>
			<name>MAS_pb_AG0</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(0)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(0)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(0) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG0</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(0) * fc.ActionGroupHasActions(0))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG1</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(1)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(1)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(1) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG1</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(1) * fc.ActionGroupHasActions(1))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG2</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(2)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(2)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(2) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG2</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(2) * fc.ActionGroupHasActions(2))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG3</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(3)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(3)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(3) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG3</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(3) * fc.ActionGroupHasActions(3))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG4</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(4)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(4)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(4) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG4</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(4) * fc.ActionGroupHasActions(4))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG5</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(5)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(5)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(5) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG5</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(5) * fc.ActionGroupHasActions(5))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG6</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(6)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(6)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(6) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG6</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(6) * fc.ActionGroupHasActions(6))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG7</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(7)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(7)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(7) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG7</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(7) * fc.ActionGroupHasActions(7))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG8</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(8)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(8)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(8) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG8</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(8) * fc.ActionGroupHasActions(8))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG9</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(9)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(9)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(9) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG9</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(9) * fc.ActionGroupHasActions(9))</variable>
			</TEXT_LABEL>
		</prop>
		<style name="unused">
			<!--
			Full Cap / Backlight 5 / Collider
			Full black cap, collider, 3/4 border with caption.  Defaults to amber text
			in upper half for an off state, green text in the lower half for an on state.
			Bullets bracketing the on/off state are separate text elements to maintain
			consistent position regardless of text.
			This
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 5 - 3/4 wrap around, text on top</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_5</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Caption</name>
				<transform>PanelTextTop_bklt</transform>
				<fontSize>5.8</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Upper Legend Bullets</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<name>Lower Legend Bullets</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<style name="One Mode Bordered White Button">
			<!--
			Full Cap / Backlight 5 / Collider
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 5 - 3/4 wrap around, text on top</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_5</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<onClick>0</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Caption</name>
				<transform>PanelTextTop_bklt</transform>
				<fontSize>5.8</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_ClearNode</name>
			<style>One Mode Bordered White Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", 1 + fc.ClearManeuverNode())</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>CLEAR$$$NODE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((0.25 + 0.75 * fc.ManeuverNodeExists()) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>CLR</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.ManeuverNodeExists())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_ClearTarget</name>
			<style>One Mode Bordered White Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", 1 + fc.ClearTarget())</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>CLEAR$$$TGT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.TargetType() > 0)) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>CLR</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.TargetType() > 0)</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Clock_SetAlarm</name>
			<style>One Mode Bordered White Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", MAS_Clock_SetAlarm())</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>SET$$$ALARM</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("Backlight") * (0.25 + 0.75 * kac.Available()))</variable>
				<text>SET</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("%AUTOID%"))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Clock_CancelAlarm</name>
			<style>One Mode Bordered White Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", kac.DeleteAlarm(fc.GetPersistent("MAS_Clock_AlarmId")))</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>CLEAR$$$ALARM</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("Backlight") * (0.25 + 0.75 * kac.AlarmExists(fc.GetPersistent("MAS_Clock_AlarmId"))))</variable>
				<text>CLR</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("%AUTOID%"))</variable>
			</TEXT_LABEL>
		</prop>

		<style name="One Mode Covered White Button">
			<!--
			Full Cap / Backlight 6 / Collider
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 6 - 3/4 wrap around, text on top</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_6</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Clear cover</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Cover02</model>
				<texture>pb_Glass_Diffuse,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Glass_Diffuse</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Cover Collider</name>
				<collider>pb_Cover_Collider</collider>
				<onClick>0</onClick>
				<sound>ASET/ASET_Props/Sounds/pb_Cover02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<name>Cover animation</name>
				<animation>pb_Cover_Anim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<onClick>0</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Caption</name>
				<transform>PanelTextTop_cover</transform>
				<fontSize>5.8</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_RecoverVessel2</name>
			<style>One Mode Covered White Button</style>
			<COLLIDER_EVENT id="0" delete="true" />
			<ANIMATION_PLAYER id="0">
				<variable>fc.VesselRecoverable()</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<onClick>fc.SetPersistent("%AUTOID%", fc.RecoverVessel() + 1)</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>RECOVER$$$VESSEL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>CALL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.VesselRecoverable())</variable>
			</TEXT_LABEL>
		</prop>

		<style name="One Mode Bordered Color Button">
			<!--
			Full Cap / Backlight 5 / Collider
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 5 - 3/4 wrap around, text on top</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_5</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<onClick>0</onClick>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Caption</name>
				<transform>PanelTextTop_bklt</transform>
				<fontSize>5.8</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_ParachuteArm</name>
			<style>One Mode Bordered Color Button</style>
			<COLLIDER_EVENT>
				<onClick>parachute.ToggleParachuteArmed()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>parachute.GetParachuteArmed()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ARM</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(parachute.GetParachuteArmed())</variable>
				<text>ARM</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(parachute.GetParachuteArmed())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_ParachuteCut</name>
			<style>One Mode Bordered Color Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", parachute.CutParachute())</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>CUT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(parachute.GetParachuteDeployed())</variable>
				<text>CUT</text>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(parachute.GetParachuteDeployed())</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_ReferenceDock</name>
			<style>One Mode Bordered Color Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetDockToReference()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetDockIsReference()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>REF.$$$DOCK</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetDockIsReference())</variable>
				<text>REF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetDockIsReference())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_ReferencePod</name>
			<style>One Mode Bordered Color Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPodToReference()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPodIsReference()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>REF.$$$POD</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPodIsReference())</variable>
				<text>REF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPodIsReference())</variable>
			</TEXT_LABEL>
		</prop>

		<style name="Two Mode Bordered Button">
			<!--
			Full Cap / Backlight 2 / Collider
			Full black cap, collider, full border no caption.  Green bullets on upper and
			lower legends.  Text is standard button white and dimmable; bullets are not dimmable.
			This button style is used when there are two different modes that may be selected,
			with legends describing the modes and the bullets indicating active mode.
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Square glow border type 2</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Upper Legend Bullets</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Lower Legend Bullets</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_Clock_ApsisMode</name>
			<style>Two Mode Bordered Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_Clock_ApsisMode")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_Clock_ApsisMode")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("Backlight") * (0.25 + 0.75 * fc.GetPersistentAsNumber("MAS_Clock_ApsisMode")))</variable>
				<text>AP</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("MAS_Clock_ApsisMode"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("Backlight") * (0.25 + 0.75 * (1 - fc.GetPersistentAsNumber("MAS_Clock_ApsisMode"))))</variable>
				<text>PE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("MAS_Clock_ApsisMode"))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Clock_StopwatchMode</name>
			<style>Two Mode Bordered Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_Clock_NextMode("%AUTOID%")</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("Backlight") * (0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_Clock_StopwatchMode") == 1)))</variable>
				<text>START</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * (fc.GetPersistentAsNumber("MAS_Clock_StopwatchMode") == 1))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("Backlight") * (0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_Clock_StopwatchMode") == 2)))</variable>
				<text>STOP</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * (fc.GetPersistentAsNumber("MAS_Clock_StopwatchMode") == 2))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Clock_TimeMode</name>
			<style>Two Mode Bordered Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_Clock_ClockMode")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_Clock_ClockMode")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("Backlight") * (0.25 + 0.75 * fc.GetPersistentAsNumber("MAS_Clock_ClockMode")))</variable>
				<text>MET</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("MAS_Clock_ClockMode"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * fc.GetPersistentAsNumber("Backlight") * (0.25 + 0.75 * (1 - fc.GetPersistentAsNumber("MAS_Clock_ClockMode"))))</variable>
				<text>UT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * (1-fc.GetPersistentAsNumber("MAS_Clock_ClockMode")))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_ReadWrite</name>
			<style>Two Mode Bordered Button</style>
			<MODEL id="1" delete="true" />
			<COLOR_SHIFT delete="true" />
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_MJComp_WriteEnable")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_WriteEnable")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_MJComp_On") * fc.GetPersistentAsNumber("Backlight")) * (0.25 + 0.75 * (1 - fc.GetPersistentAsNumber("MAS_MJComp_WriteEnable"))))</variable>
				<text>READ</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (1 - fc.GetPersistentAsNumber("MAS_MJComp_WriteEnable")))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_MJComp_On") * fc.GetPersistentAsNumber("Backlight")) * (0.25 + 0.75 * fc.GetPersistentAsNumber("MAS_MJComp_WriteEnable")))</variable>
				<text>WRITE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * fc.GetPersistentAsNumber("MAS_MJComp_WriteEnable"))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
			</TEXT_LABEL>
		</prop>
		<style name="Two Mode Bordered on-off Button">
			<!--
			Full Cap / Backlight 5 / Collider
			Full black cap, collider, 3/4 border with caption.  Amber bullets and text on upper and
			green on lower legends.  Not dimmable.
			This button style is used when there are two different modes that may be selected,
			with legends and bullets illuminating for the active mode.
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 5 - 3/4 wrap around, text on top</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_5</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Caption</name>
				<transform>PanelTextTop_bklt</transform>
				<fontSize>5.8</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Upper Legend Bullets</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<name>Lower Legend Bullets</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_Antenna</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleAntenna()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.AntennaMoving()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ANTENNA$$$DEPLOY</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((fc.AntennaPosition() == 1) * fc.AntennaCount())</variable>
				<text>IN</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.AntennaPosition() == 1) * fc.AntennaCount())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.AntennaPosition() == 4)</variable>
				<text>OUT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.AntennaPosition() == 4)</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Brakes</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleBrakes()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetBrakes()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>BRAKES</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.BrakesHasActions() * (1 - fc.GetBrakes()))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.BrakesHasActions() * (1 - fc.GetBrakes()))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.BrakesHasActions() * fc.GetBrakes())</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.BrakesHasActions() * fc.GetBrakes())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Engine</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleEnginesEnabled()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetEnginesEnabled()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ENGINE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetEnginesEnabled())</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetEnginesEnabled())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetEnginesEnabled())</variable>
				<text>ARM</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetEnginesEnabled())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_FuelCell</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleFuelCellActive()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetFuelCellActive()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>FUEL$$$CELL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((1 - fc.GetFuelCellActive()) * fc.FuelCellCount())</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((1 - fc.GetFuelCellActive()) * fc.FuelCellCount())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetFuelCellActive())</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetFuelCellActive())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Gear</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleGear()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetGear()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>GEAR</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GearHasActions() * (1 - fc.GetGear()))</variable>
				<text>UP</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GearHasActions() * (1 - fc.GetGear()))</variable>
				<text>▲          ▲</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<fontSize>3.8</fontSize>
				<variable>fc.Conditioned(fc.GearHasActions() * fc.GetGear())</variable>
				<text>DOWN</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GearHasActions() * fc.GetGear())</variable>
				<text>▼          ▼</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Generic_IntLight</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_Generic_IntLight")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_Generic_IntLight")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>CABIN$$$LIGHT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Generic_IntLight"))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Generic_IntLight"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Generic_IntLight"))</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Generic_IntLight"))</variable>
			</TEXT_LABEL>
			<INT_LIGHT>
				<name>Interior Lights</name>
				<lightName>Point light</lightName>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Generic_IntLight"))</variable>
			</INT_LIGHT>
		</prop>
		<prop>
			<name>MAS_pb_KP0110_IntLight_Back</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_KP0110_BackLight")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_KP0110_BackLight")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>AFT$$$CABIN</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_KP0110_BackLight"))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_KP0110_BackLight"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_KP0110_BackLight"))</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_KP0110_BackLight"))</variable>
			</TEXT_LABEL>
			<INT_LIGHT>
				<name>Interior Lights</name>
				<lightName>Light_back</lightName>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_KP0110_BackLight"))</variable>
			</INT_LIGHT>
		</prop>
		<prop>
			<name>MAS_pb_KP0110_IntLight_Top</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_KP0110_TopLight")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_KP0110_TopLight")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>UPPER$$$CABIN</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_KP0110_TopLight"))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_KP0110_TopLight"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_KP0110_TopLight"))</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_KP0110_TopLight"))</variable>
			</TEXT_LABEL>
			<INT_LIGHT>
				<name>Interior Lights</name>
				<lightName>Light_top</lightName>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_KP0110_TopLight"))</variable>
			</INT_LIGHT>
		</prop>
		<prop>
			<name>MAS_pb_KP0110_IntLight_Tunnel</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_KP0110_TunnelLight")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_KP0110_TunnelLight")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>TUNNEL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_KP0110_TunnelLight"))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_KP0110_TunnelLight"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_KP0110_TunnelLight"))</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_KP0110_TunnelLight"))</variable>
			</TEXT_LABEL>
			<INT_LIGHT>
				<name>Interior Lights</name>
				<lightName>Light_tunnel</lightName>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_KP0110_TunnelLight"))</variable>
			</INT_LIGHT>
		</prop>
		<prop>
			<name>MAS_pb_Lights</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleLights()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetLights()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>EXT$$$LIGHT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.LightsHasActions() * (1 - fc.GetLights()))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.LightsHasActions() * (1 - fc.GetLights()))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.LightsHasActions() * fc.GetLights())</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.LightsHasActions() * fc.GetLights())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_GimbalLock</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleGimbalLock()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetGimbalsLocked()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>GIMBAL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetGimbalsLocked())</variable>
				<text>LOCK</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetGimbalsLocked())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(1 - fc.GetGimbalsLocked())</variable>
				<text>FREE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(1 - fc.GetGimbalsLocked())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Mk3-9LeftCabin</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_Mk3-9LeftCockpitLight")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_Mk3-9LeftCockpitLight")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>CABIN$$$LIGHT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Mk3-9LeftCockpitLight"))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Mk3-9LeftCockpitLight"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9LeftCockpitLight"))</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9LeftCockpitLight"))</variable>
			</TEXT_LABEL>
			<INT_LIGHT>
				<name>Interior Lights</name>
				<lightName>Light01</lightName>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9LeftCockpitLight"))</variable>
			</INT_LIGHT>
		</prop>
		<prop>
			<name>MAS_pb_Mk3-9LeftInstrument</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_Mk3-9LeftInstrumentLight")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_Mk3-9LeftInstrumentLight")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>INST$$$LIGHT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Mk3-9LeftInstrumentLight"))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Mk3-9LeftInstrumentLight"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9LeftInstrumentLight"))</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9LeftInstrumentLight"))</variable>
			</TEXT_LABEL>
			<INT_LIGHT>
				<name>Interior Lights</name>
				<lightName>Light_LeftInstrument</lightName>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9LeftInstrumentLight"))</variable>
			</INT_LIGHT>
		</prop>
		<prop>
			<name>MAS_pb_Mk3-9RightCabin</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_Mk3-9RightCabinLight")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_Mk3-9RightCabinLight")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>CABIN$$$LIGHT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Mk3-9RightCabinLight"))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Mk3-9RightCabinLight"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9RightCabinLight"))</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9RightCabinLight"))</variable>
			</TEXT_LABEL>
			<INT_LIGHT>
				<name>Interior Lights</name>
				<lightName>Light02</lightName>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9RightCabinLight"))</variable>
			</INT_LIGHT>
		</prop>
		<prop>
			<name>MAS_pb_Mk3-9RightInstrument</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_Mk3-9RightInstrumentLight")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_Mk3-9RightInstrumentLight")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>INST$$$LIGHT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Mk3-9RightInstrumentLight"))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_Mk3-9RightInstrumentLight"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9RightInstrumentLight"))</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9RightInstrumentLight"))</variable>
			</TEXT_LABEL>
			<INT_LIGHT>
				<name>Interior Lights</name>
				<lightName>Light_RightInstrument</lightName>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Mk3-9RightInstrumentLight"))</variable>
			</INT_LIGHT>
		</prop>
		<prop>
			<name>MAS_pb_MRK_IntLight</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_MRK_IntLight")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_MRK_IntLight")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>UPPER$$$CABIN</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_MRK_IntLight"))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetPersistentAsNumber("MAS_MRK_IntLight"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MRK_IntLight"))</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MRK_IntLight"))</variable>
			</TEXT_LABEL>
			<INT_LIGHT>
				<name>Interior Lights</name>
				<lightName>Point light (1)</lightName>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MRK_IntLight"))</variable>
			</INT_LIGHT>
		</prop>
		<prop>
			<name>MAS_pb_ParachuteDeploy</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>parachute.DeployParachute()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>parachute.GetParachuteDeployed()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>DEPLOY</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(parachute.DeploymentSafe() &lt; 1)</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<text>DNGR</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(parachute.DeploymentSafe() &lt; 1)</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(parachute.GetParachuteDeployed())</variable>
				<text>OK</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(parachute.GetParachuteDeployed())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Radar</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleRadar()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.RadarActive()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>RADAR</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((1 - fc.RadarActive()) * fc.RadarCount())</variable>
				<text>STBY</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((1 - fc.RadarActive()) * fc.RadarCount())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.RadarActive())</variable>
				<text>SCAN</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.RadarActive())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Radiator</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleRadiator()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.RadiatorMoving()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>RADIATOR$$$DEPLOY</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((fc.RadiatorPosition() == 1) * fc.RadiatorDeployable())</variable>
				<text>IN</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.RadiatorPosition() == 1) * fc.RadiatorDeployable())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.RadiatorPosition() == 4)</variable>
				<text>OUT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.RadiatorPosition() == 4)</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_RCS</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleRCS()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetRCS()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>RCS</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.HasRCS() * (1 - fc.GetRCS()))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.HasRCS() * (1 - fc.GetRCS()))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.HasRCS() * fc.GetRCS())</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.HasRCS() * fc.GetRCS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_RCS_rotate</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleRCSRotate()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetRCSRotate()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ROTATE$$$RCS</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.HasRCS() * (1 - fc.GetRCSRotate()))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.HasRCS() * (1 - fc.GetRCSRotate()))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.HasRCS() * fc.GetRCSRotate())</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.HasRCS() * fc.GetRCSRotate())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_RCS_translate</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleRCSTranslate()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetRCSTranslate()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>XLATE$$$RCS</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.HasRCS() * (1 - fc.GetRCSTranslate()))</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.HasRCS() * (1 - fc.GetRCSTranslate()))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.HasRCS() * fc.GetRCSTranslate())</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.HasRCS() * fc.GetRCSTranslate())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_RecoverVessel</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", fc.RecoverVessel() + 1)</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>RECOVER$$$VESSEL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.VesselRecoverable())</variable>
				<text>WAIT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.VesselRecoverable())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.VesselRecoverable())</variable>
				<text>OK</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.VesselRecoverable())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS</name>
			<style>Two Mode Bordered on-off Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleSAS()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSAS()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>SAS</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(1 - fc.GetSAS())</variable>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(1 - fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetSAS())</variable>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>

		<style name="Two Mode Bordered Captioned Button">
			<!--
			Full Cap / Backlight 5 / Collider
			Full black cap, collider, 3/4 border with caption.  Green bullets on upper and
			lower legends.  Text is standard button white and dimmable; bullets are not dimmable.
			This button style is used when there are two different modes that may be selected,
			with legends describing the modes and the bullets indicating active mode.
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 5 - 3/4 wrap around, text on top</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_5</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Caption</name>
				<transform>PanelTextTop_bklt</transform>
				<fontSize>5.8</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Upper Legend Bullets</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<name>Lower Legend Bullets</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_ARRT_Mode</name>
			<style>Two Mode Bordered Captioned Button</style>
			<COLLIDER_EVENT>
				<onClick>ARRT_ToggleMode()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_ARRT_Mode")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ARRT$$$MODE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 1)) * (fc.GetPersistentAsNumber("Backlight") * fc.GetPersistentAsNumber("MAS_ARRT_On")))</variable>
				<text>RNG</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 1) * fc.GetPersistentAsNumber("MAS_ARRT_On"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 0)) * (fc.GetPersistentAsNumber("Backlight") * fc.GetPersistentAsNumber("MAS_ARRT_On")))</variable>
				<text>ALT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_ARRT_Mode") == 0) * fc.GetPersistentAsNumber("MAS_ARRT_On"))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Chatterer</name>
			<style>Two Mode Bordered Captioned Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("%AUTOID%", chatterer.StartTalking())</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>PTT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(chatterer.Available() * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>RX</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(chatterer.Receiving())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(chatterer.Available() * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>TX</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(chatterer.Transmitting())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_FDAI1_ErrorScale</name>
			<style>Two Mode Bordered Captioned Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", fdaiNextErrorWrapped(1))</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ERROR$$$SCALE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI1_Error") == 0)) * (fc.GetPersistentAsNumber("MAS_FDAI1_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>x 1</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI1_Error") == 0) * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI1_Error") == 2)) * (fc.GetPersistentAsNumber("MAS_FDAI1_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>x 1/12</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI1_Error") == 2) * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="5">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI1_Error") == 1)) * (fc.GetPersistentAsNumber("MAS_FDAI1_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>x 1/6</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="6">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI1_Error") == 1) * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_FDAI2_ErrorScale</name>
			<style>Two Mode Bordered Captioned Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", fdaiNextErrorWrapped(2))</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ERROR$$$SCALE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI2_Error") == 0)) * (fc.GetPersistentAsNumber("MAS_FDAI2_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>x 1</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI2_Error") == 0) * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI2_Error") == 2)) * (fc.GetPersistentAsNumber("MAS_FDAI2_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>x 1/12</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI2_Error") == 2) * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="5">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI2_Error") == 1)) * (fc.GetPersistentAsNumber("MAS_FDAI2_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>x 1/6</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="6">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI2_Error") == 1) * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_FDAI1_RateScale</name>
			<style>Two Mode Bordered Captioned Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", fdaiNextRateWrapped(1))</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ERROR$$$SCALE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI1_Rate") == 0)) * (fc.GetPersistentAsNumber("MAS_FDAI1_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>x 1</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI1_Rate") == 0) * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI1_Rate") == 2)) * (fc.GetPersistentAsNumber("MAS_FDAI1_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>x 1/12</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI1_Rate") == 2) * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="5">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI1_Rate") == 1)) * (fc.GetPersistentAsNumber("MAS_FDAI1_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>x 1/6</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="6">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI1_Rate") == 1) * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_FDAI2_RateScale</name>
			<style>Two Mode Bordered Captioned Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", fdaiNextRateWrapped(2))</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ERROR$$$SCALE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI2_Rate") == 0)) * (fc.GetPersistentAsNumber("MAS_FDAI2_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>x 1</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI2_Rate") == 0) * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI2_Rate") == 2)) * (fc.GetPersistentAsNumber("MAS_FDAI2_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>x 1/12</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI2_Rate") == 2) * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="5">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_FDAI2_Rate") == 1)) * (fc.GetPersistentAsNumber("MAS_FDAI2_Power") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>x 1/6</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="6">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_FDAI2_Rate") == 1) * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_IMP_Mode</name>
			<style>Two Mode Bordered Captioned Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", fc.SetPersistent("MAS_IMP_Mode", fc.GetPersistentAsNumber("MAS_IMP_On") * fc.AddPersistentWrapped("MAS_IMP_Mode_Select", 1, 1, 4)) + 1)</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>IMP$$$MODE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_IMP_Mode_Select") == 1)) * (fc.GetPersistentAsNumber("MAS_IMP_On") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>VSSL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_IMP_Mode_Select") == 1) * fc.GetPersistentAsNumber("MAS_IMP_On"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_IMP_Mode_Select") == 3)) * (fc.GetPersistentAsNumber("MAS_IMP_On") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<text>LAND</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_IMP_Mode_Select") == 3) * fc.GetPersistentAsNumber("MAS_IMP_On"))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="5">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned((0.25 + 0.75 * (fc.GetPersistentAsNumber("MAS_IMP_Mode_Select") == 2)) * (fc.GetPersistentAsNumber("MAS_IMP_On") * fc.GetPersistentAsNumber("Backlight")))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>TGT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="6">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned((fc.GetPersistentAsNumber("MAS_IMP_Mode_Select") == 2) * fc.GetPersistentAsNumber("MAS_IMP_On"))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Precision</name>
			<style>Two Mode Bordered Captioned Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePrecisionMode()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPrecisionMode()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>PRECISION$$$MODE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned((0.25 + 0.75 * (1 - fc.GetPrecisionMode())) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>NORM</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((1 - fc.GetPrecisionMode()))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((0.25 + 0.75 * fc.GetPrecisionMode()) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>PREC</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPrecisionMode())</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampBlue</activeColor>
			</TEXT_LABEL>
		</prop>

		<style name="One Status Bordered Lamp">
			<!--
			Full Cap / Backlight 2
			Full black cap, no collider, full border no caption.  Defaults to amber text
			in center of legend.
			Bullets bracketing the legend is separate text elements to maintain
			consistent position regardless of text.  Animation is unused.
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 2 - full wrap around</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<TEXT_LABEL id="0">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_Clock_Warp</name>
			<style>One Status Bordered Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.WarpRate() > 1)</variable>
				<text>WARP</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.WarpRate() > 1)</variable>
			</TEXT_LABEL>
		</prop>
		<style name="Two Status Bordered Lamp">
			<!--
			Full Cap / Backlight 2
			Full black cap, no collider, full border no caption.  Defaults to amber text
			in upper half for an off state, green text in the lower half for a active state.
			Bullets bracketing the on/off state are separate text elements to maintain
			consistent position regardless of text.  Animation is unused.
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 2 - full wrap around</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<TEXT_LABEL id="0">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Upper Legend Bullets</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Lower Legend Bullets</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_AntennaState</name>
			<style>Two Status Bordered Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.AntennaMoving())</variable>
				<text>MOVE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.AntennaMoving())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.AntennaDamaged())</variable>
				<text>DMG</text>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.AntennaDamaged())</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Clock_KacMode</name>
			<style>Two Status Bordered Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * (kac.TimeToAlarm() > 0))</variable>
				<text>KAC</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * (kac.TimeToAlarm() > 0))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * (kac.TimeToAlarm() == 0))</variable>
				<text>TIMER</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On") * (kac.TimeToAlarm() == 0))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_CommNetState</name>
			<style>Two Status Bordered Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.CommNetConnectedHome())</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<text>VOICE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.CommNetConnectedHome())</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.CommNetCanScience())</variable>
				<text>DATA</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.CommNetCanScience())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>LINK</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_PowerState</name>
			<style>Two Status Bordered Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GeneratorOutput() > 0.01)</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<text>GEN</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GeneratorOutput() > 0.01)</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.AlternatorOutput() > 0.01)</variable>
				<text>ALT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.AlternatorOutput() > 0.01)</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_RadiatorState</name>
			<style>Two Status Bordered Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.RadiatorMoving())</variable>
				<text>MOVE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.RadiatorMoving())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.RadiatorDamaged())</variable>
				<text>DMG</text>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.RadiatorDamaged())</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
			</TEXT_LABEL>
		</prop>

		<style name="Split Detail Status Lamp">
			<!--
			Split horizontal Cap / no border
			Split black cap, no collider, no border no caption.  Green text in upper half to identify
			data being tracked, blended color text in bottom half to show proportional value
			-->
			<MODEL id="0">
				<comment>Black horizontal cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_SplitHorizontal_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<TEXT_LABEL id="0">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
		</style>
		<prop>
			<name>MAS_pb_Comm_Active</name>
			<style>Split Detail Status Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.CommNetConnectedHome())</variable>
				<text>COMM</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.CommNetConnectedHome() * fc.CommNetSignalStrength())</variable>
				<text>LINK</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Engine_Active</name>
			<style>Split Detail Status Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.EngineCountActive())</variable>
				<text>ENGINE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.CurrentThrust(false))</variable>
				<text>ACTIVE</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Gimbal_Active</name>
			<style>Split Detail Status Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetGimbalsActive())</variable>
				<text>GIMBAL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.CurrentGimbalDeflection() * fc.GetGimbalsActive())</variable>
				<text>ACTIVE</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MechJeb_Active</name>
			<style>Split Detail Status Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(mechjeb.ComputerActive())</variable>
				<text>COMP</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(mechjeb.AutopilotActive())</variable>
				<text>PILOT</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_On</name>
			<style>Split Detail Status Lamp</style>
			<MODEL id="1">
				<comment>Square glow border type 2</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (mechjeb.Available() > 0))</variable>
				<text>READY</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (mechjeb.Available() &lt; 1))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<text>FAULT</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_pb_Node_Active</name>
			<style>Split Detail Status Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ManeuverNodeExists())</variable>
				<text>MNVR</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.ManeuverNodeExists() * fc.PeriodStep(2) * (fc.Abs(fc.ManeuverNodeTime()) &lt; 60))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<text>1 MIN</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Radiator_Active</name>
			<style>Split Detail Status Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.RadiatorActive())</variable>
				<text>RAD</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.RadiatorUtilization())</variable>
				<text>ACTIVE</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_Rcs_Active</name>
			<style>Split Detail Status Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.HasRCS() * fc.GetRCS())</variable>
				<text>RCS</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.CurrentRCSThrust())</variable>
				<text>ACTIVE</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_RcsTranslateY</name>
			<style>Split Detail Status Lamp</style>
			<MODEL id="1">
				<comment>Square glow border type 2</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetRCSActive() * fc.StickTranslationY())</variable>
				<text>UP</text>
				<blend>true</blend>
				<range>0, 1</range>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetRCSActive() * fc.StickTranslationY())</variable>
				<text>DN</text>
				<range>0, -1</range>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_pb_RcsTranslateZ</name>
			<style>Split Detail Status Lamp</style>
			<MODEL id="1">
				<comment>Square glow border type 2</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetRCSActive() * fc.StickTranslationZ())</variable>
				<text>FWD</text>
				<blend>true</blend>
				<range>0, 1</range>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetRCSActive() * fc.StickTranslationZ())</variable>
				<text>AFT</text>
				<range>0, -1</range>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_pb_ReactionWheel_Active</name>
			<style>Split Detail Status Lamp</style>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetReactionWheelActive())</variable>
				<text>GYRO</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.ReactionWheelTorque() * fc.GetReactionWheelActive())</variable>
				<text>ACTIVE</text>
			</TEXT_LABEL>
		</prop>

		<style name="Vertical Detail Status Lamp">
			<!--
			Split vertical Cap / no border
			Split black cap, no collider, no border no caption.  Green text in upper half to identify
			data being tracked, blended color text in bottom half to show proportional value
			-->
			<MODEL id="0">
				<comment>Black vertical cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_SplitVertical_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<TEXT_LABEL id="0">
				<name>Left Legend</name>
				<transform>Legend_Left</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Right Legend</name>
				<transform>Legend_Right</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
			</TEXT_LABEL>
		</style>
		<prop>
			<name>MAS_pb_RcsTranslateX</name>
			<style>Vertical Detail Status Lamp</style>
			<MODEL id="1">
				<comment>Square glow border type 2</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.GetRCSActive() * fc.StickTranslationX())</variable>
				<text>L</text>
				<fontSize>5</fontSize>
				<blend>true</blend>
				<range>0, -1</range>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetRCSActive() * fc.StickTranslationX())</variable>
				<fontSize>5</fontSize>
				<text>R</text>
				<range>0, 1</range>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</prop>

		<style name="MechJeb Program Button">
			<!--
			Full Cap / Backlight 5 / Collider
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 5 - 3/4 wrap around, text on top</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_5</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<onClick>0</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_On")</variable>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Caption</name>
				<transform>PanelTextTop_bklt</transform>
				<fontSize>5.8</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * fc.GetPersistentAsNumber("Backlight"))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>EXEC</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("%AUTOID%") == 1)</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>ERR</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Center Legend Bullets</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("%AUTOID%") == 1)</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("%AUTOID%") == 2)</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>OK</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="5">
				<name>Lower Legend Bullets</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("%AUTOID%") == 2)</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_MJ_AP_ChangeAlt</name>
			<style>MechJeb Program Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", 1 + mechjeb.CircularizeAt(fc.GetPersistentAsNumber("MAS_MJComp_Buffer") * 1000))</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>SET$$$ALT</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJ_AP_ChangeAp</name>
			<style>MechJeb Program Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", 1 + mechjeb.ChangeApoapsis(fc.GetPersistentAsNumber("MAS_MJComp_Buffer") * 1000))</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>SET$$$AP</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJ_AP_ChangePe</name>
			<style>MechJeb Program Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", 1 + mechjeb.ChangePeriapsis(fc.GetPersistentAsNumber("MAS_MJComp_Buffer") * 1000))</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>SET$$$PE</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJ_AP_MatchVel</name>
			<style>MechJeb Program Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", 1 + mechjeb.MatchVelocities())</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>MATCH$$$VEL</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJ_AP_PlotXfer</name>
			<style>MechJeb Program Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("%AUTOID%", 1 + mechjeb.PlotTransfer())</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>PLOT$$$XFR</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Enter</name>
			<style>MechJeb Program Button</style>
			<MODEL id="1" delete="true"/>
			<TEXT_LABEL id="0" delete="true"/>
			<COLOR_SHIFT id="0" delete="true"/>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_Enter()</onClick>
				<onRelease>fc.SetPersistent("MAS_MJComp_Exec", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_Exec")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_Exec") * (fc.GetPersistentAsNumber("MAS_MJComp_Status") == 2))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_Exec") * (fc.GetPersistentAsNumber("MAS_MJComp_Status") == 2))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="4">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_Exec") * (fc.GetPersistentAsNumber("MAS_MJComp_Status") == 1))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="5">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_Exec") * (fc.GetPersistentAsNumber("MAS_MJComp_Status") == 1))</variable>
			</TEXT_LABEL>
		</prop>

		<style name="MechJeb Sequence Button">
			<!--
			Full Cap / Backlight 5 / Collider
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Glow Border Type 5 - 3/4 wrap around, text on top</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Bcklt_5</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<onClick>0</onClick>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Caption</name>
				<transform>PanelTextTop_bklt</transform>
				<fontSize>5.8</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>ENGAGE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Lower Legend Bullets</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_pb_MJ_SeqAscent</name>
			<style>MechJeb Sequence Button</style>
			<COLLIDER_EVENT>
				<onClick>mechjeb.ToggleAscentAutopilot()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>mechjeb.AscentAutopilotActive()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ASCENT$$$SEQ</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(mechjeb.AscentAutopilotActive())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(mechjeb.AscentAutopilotActive())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJ_SeqLanding</name>
			<style>MechJeb Sequence Button</style>
			<COLLIDER_EVENT>
				<onClick>mechjeb.ToggleLandingAutopilot()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>mechjeb.LandingAutopilotActive()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>LANDING$$$SEQ</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(mechjeb.LandingAutopilotActive())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(mechjeb.LandingAutopilotActive())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJ_SeqLandingComp</name>
			<style>MechJeb Sequence Button</style>
			<COLLIDER_EVENT>
				<onClick>mechjeb.ToggleLandingComputer()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>mechjeb.LandingComputerActive()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>LANDING$$$COMP</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(mechjeb.LandingComputerActive())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(mechjeb.LandingComputerActive())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJ_SeqManeuver</name>
			<style>MechJeb Sequence Button</style>
			<COLLIDER_EVENT>
				<onClick>mechjeb.ToggleManeuverNodeExecutor()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>mechjeb.ManeuverNodeExecutorActive()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>MNVR$$$SEQ</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(mechjeb.ManeuverNodeExecutorActive())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(mechjeb.ManeuverNodeExecutorActive())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJ_SeqRendezvous</name>
			<style>MechJeb Sequence Button</style>
			<COLLIDER_EVENT>
				<onClick>mechjeb.ToggleRendezvousAutopilot()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>mechjeb.RendezvousAutopilotActive()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>RNDZ$$$SEQ</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(mechjeb.RendezvousAutopilotActive())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned(mechjeb.RendezvousAutopilotActive())</variable>
			</TEXT_LABEL>
		</prop>

		<style name="MechJeb Keypad Button">
			<!--
			Full Cap / Collider
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>10</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * fc.GetPersistentAsNumber("Backlight"))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<onClick>0</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_On")</variable>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
		</style>
		<prop>
			<name>MAS_pb_MJComp_0</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("0", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>0</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_1</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("1", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>1</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_2</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("2", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>2</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_3</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("3", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>3</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_4</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("4", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>4</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_5</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("5", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>5</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_6</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("6", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>6</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_7</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("7", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>7</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_8</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("8", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>8</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_9</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_NumKey("9", "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>9</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Clr</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_Clear("%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<fontSize>7</fontSize>
				<text>CLR</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Del</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_Delete("%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<fontSize>7</fontSize>
				<text>DEL</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Minus</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_AddKey(-1, "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>-</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Plus</name>
			<style>MechJeb Keypad Button</style>
			<COLLIDER_EVENT>
				<onClick>MAS_MJComp_AddKey(1, "%AUTOID%")</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>+</text>
			</TEXT_LABEL>
		</prop>

		<style name="MechJeb Mode Button">
			<!--
			Collider
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<onClick>0</onClick>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>4.5</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * fc.GetPersistentAsNumber("Backlight"))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>SEL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Lower Legend Bullets</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
		</style>
		<prop>
			<name>MAS_pb_MJComp_Mode0_Off</name>
			<style>MechJeb Mode Button</style>
			<TEXT_LABEL id="0">
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 0))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
				<text>OFF</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 0))</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampAmber</activeColor>
			</TEXT_LABEL>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_MJComp_Mode", 0)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 0</variable>
			</ANIMATION_PLAYER>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Mode1_LaunchAlt</name>
			<style>MechJeb Mode Button</style>
			<TEXT_LABEL id="0">
				<text>LAUNCH</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 1))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 1))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>4.5</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * fc.GetPersistentAsNumber("Backlight"))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>ALT</text>
			</TEXT_LABEL>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_MJComp_Mode", 1)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 1</variable>
			</ANIMATION_PLAYER>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Mode2_LaunchInc</name>
			<style>MechJeb Mode Button</style>
			<TEXT_LABEL id="0">
				<text>LAUNCH</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 2))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 2))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>4.5</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * fc.GetPersistentAsNumber("Backlight"))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<text>INC</text>
			</TEXT_LABEL>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_MJComp_Mode", 2)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 2</variable>
			</ANIMATION_PLAYER>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Mode3_Alt</name>
			<style>MechJeb Mode Button</style>
			<TEXT_LABEL id="0">
				<text>ALT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 3))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 3))</variable>
			</TEXT_LABEL>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_MJComp_Mode", 3)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 3</variable>
			</ANIMATION_PLAYER>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Mode4_Ap</name>
			<style>MechJeb Mode Button</style>
			<TEXT_LABEL id="0">
				<text>AP</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 4))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 4))</variable>
			</TEXT_LABEL>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_MJComp_Mode", 4)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 4</variable>
			</ANIMATION_PLAYER>
		</prop>
		<prop>
			<name>MAS_pb_MJComp_Mode5_Pe</name>
			<style>MechJeb Mode Button</style>
			<TEXT_LABEL id="0">
				<text>PE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 5))</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_MJComp_On") * (fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 5))</variable>
			</TEXT_LABEL>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_MJComp_Mode", 5)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_Mode") == 5</variable>
			</ANIMATION_PLAYER>
		</prop>

		<style name="SAS Mode Button">
			<!--
			Collider
			-->
			<MODEL id="0">
				<comment>Black full cap</comment>
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<onClick>0</onClick>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Upper Legend</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Center Legend</name>
				<transform>Legend_Center</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<blend>true</blend>
				<range>0, 1</range>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>Lower Legend</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>ON</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<name>Lower Legend Bullets</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>0</variable>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>●           ●</text>
			</TEXT_LABEL>
		</style>
		<prop>
			<name>MAS_pb_SAS_AntiNormal</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(4)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 4</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ANTI</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>NORMAL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 4) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 4) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS_AntiTarget</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(8)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 8</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>ANTI</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>TARGET</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 8) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 8) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS_ManeuverNode</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(9)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 9</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>MNVR</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>NODE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 9) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 9) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS_Normal</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(3)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 3</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>NORMAL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1" delete="true" />
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 3) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 3) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS_Prograde</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(1)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 1</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>PRO</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>GRADE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 1) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 1) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS_RadialIn</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(5)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 5</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>RADIAL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>IN</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 5) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 5) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS_RadialOut</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(6)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 6</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>RADIAL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>OUT</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 6) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 6) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS_Retrograde</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(2)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 2</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>RETRO</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>GRADE</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 2) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 2) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS_StabilityAssist</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(0)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 0</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>STAB</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>ASSIST</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 0) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 0) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_SAS_Target</name>
			<style>SAS Mode Button</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetSASMode(7)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetSASMode() == 7</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<text>TARGET</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1" delete="true" />
			<TEXT_LABEL id="2">
				<variable>fc.Conditioned((fc.GetSASMode() == 7) * fc.GetSAS())</variable>
			</TEXT_LABEL>
			<TEXT_LABEL id="3">
				<variable>fc.Conditioned((fc.GetSASMode() == 7) * fc.GetSAS())</variable>
			</TEXT_LABEL>
		</prop>
	</PushButton>

	<!--
	Flight director / attitude indicator.  Included here
	because MAS can support an arbitrary number of them, provided you create the
	supporting controls (power switch, rate and scale controls, GMCP).
	-->
	<fdai folder="FDAI">
		<style name="FDAI">
			<MODEL>
				<model>ASET/ASET_Props/Instruments/FDAI/ASET_FDAI</model>
			</MODEL>
			<ROTATION id="0">
				<comment>RATE ARROWS --------------------</comment>
				<name>Roll Rate Arrow rotation</name>
				<transform>RollRateArrowLoc</transform>
				<variable>0</variable>
				<startRotation>0, -9.2, 0</startRotation>
				<endRotation>0, 9.2, 0</endRotation>
				<range>-10.0, 10.0</range>
				<blend>true</blend>
				<speed>2.0</speed>
			</ROTATION>
			<ROTATION id="1">
				<name>Pitch Rate Arrow rotation</name>
				<transform>PitchlRateArrowLoc</transform>
				<variable>0</variable>
				<startRotation>0, -9.2, 0</startRotation>
				<endRotation>0, 9.2, 0</endRotation>
				<range>-10.0, 10.0</range>
				<blend>true</blend>
				<speed>2.0</speed>
			</ROTATION>
			<ROTATION id="2">
				<name>Yaw Rate Arrow rotation</name>
				<transform>YawRateArrowLoc</transform>
				<variable>0</variable>
				<startRotation>0, -9.2, 0</startRotation>
				<endRotation>0, 9.2, 0</endRotation>
				<range>-10.0, 10.0</range>
				<blend>true</blend>
				<speed>2.0</speed>
			</ROTATION>
			<ROTATION id="3">
				<comment>ROLL CHEVRON -------------------</comment>
				<name>Roll Marker rotation</name>
				<transform>RollMarkerLoc</transform>
				<variable>0</variable>
				<startRotation>0, 0, 180</startRotation>
				<endRotation>0, 0, -180</endRotation>
				<range>-180, 180</range>
				<blend>true</blend>
				<speed>1.0</speed>
				<longPath>true</longPath>
				<modulo>360</modulo>
			</ROTATION>
			<TRANSLATION id="0">
				<comment>ERROR NEEDLES ---------------------------------</comment>
				<name>Pitch Error Needle translation</name>
				<transform>PitchErrorNeedleObj</transform>
				<startTranslation>0, -0.0159, 0</startTranslation>
				<endTranslation>0, 0.0159, 0</endTranslation>
				<variable>0</variable>
				<range>12, -12</range>
				<blend>true</blend>
				<speed>1.0</speed>
			</TRANSLATION>
			<TRANSLATION id="1">
				<name>Yaw Error Needle translation</name>
				<transform>YawErrorNeedleObj</transform>
				<startTranslation>0, -0.0159, 0</startTranslation>
				<endTranslation>0, 0.0159, 0</endTranslation>
				<variable>0</variable>
				<range>-12, 12</range>
				<blend>true</blend>
				<speed>1.0</speed>
			</TRANSLATION>
			<TRANSLATION id="2">
				<name>Roll Error Needle translation</name>
				<transform>RollErrorNeedleObj</transform>
				<startTranslation>0, -0.0159, 0</startTranslation>
				<endTranslation>0, 0.0159, 0</endTranslation>
				<variable>0</variable>
				<range>-12, 12</range>
				<blend>true</blend>
				<speed>1.0</speed>
			</TRANSLATION>
			<ANIMATION_PLAYER id="0">
				<comment>FLAGS ----------------------------------------------</comment>
				<name>Error Flag anim</name>
				<animation>ErrorFlagAnim</animation>
				<speed>2.0</speed>
			</ANIMATION_PLAYER>
			<ANIMATION_PLAYER id="1">
				<name>Off Flag anim</name>
				<animation>OFFflagAnim</animation>
				<speed>2.0</speed>
			</ANIMATION_PLAYER>
			<ANIMATION_PLAYER id="2">
				<name>DP Align Flag anim</name>
				<animation>PortFlagAnim</animation>
				<speed>2.0</speed>
			</ANIMATION_PLAYER>
			<COLOR_SHIFT id="0">
				<name>Gauge scale-color backlight</name>
				<comment>FDAI backlight --------------------------------</comment>
				<transform>FDAI_NavSphere, RateScaleObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_NASAGAUGESCALE_ACTIVECOLOR</activeColor>
				<variable>0</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Gauge hand-color backlight</name>
				<transform>ErrorScaleObj, RollScaleRingObj, RollMarkerObj, CrossObj, VehicleMarker, ERROR_FlagObj, PORT_FlagObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_NASAGAUGEHAND_ACTIVECOLOR</activeColor>
				<variable>0</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="2">
				<name>Error needle backlight</name>
				<transform>RollErrorNeedleObj, PitchErrorNeedleObj, YawErrorNeedleObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>230,230,230,255</activeColor>
				<variable>0</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<TEXT_LABEL>
				<name>Device ID Label</name>
				<transform>panelNumberObj</transform>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.003, -0.006</transformOffset>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<fontSize>4</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<emissive>never</emissive>
				<passiveColor>8, 8, 8, 255</passiveColor>
			</TEXT_LABEL>
			<MODULE>
				<name>MASNavBall</name>
				<navBallName>NavSphereRotGO</navBallName>
				<range>-0.5, 0.5</range>
				<maxAngleChange>180</maxAngleChange>
			</MODULE>
		</style>
		<prop>
			<name>MAS_ASET_FDAI-01</name>
			<style>FDAI</style>
			<startupScript>fdaiInitialize(1)</startupScript>
			<ROTATION id="0">
				<variable>fc.Conditioned(fc.RollRate() * (fc.GetPersistentAsNumber("MAS_FDAI1_RateScalar") * fc.GetPersistentAsNumber("MAS_FDAI1_Power")))</variable>
			</ROTATION>
			<ROTATION id="1">
				<variable>fc.Conditioned(fc.PitchRate() * (fc.GetPersistentAsNumber("MAS_FDAI1_RateScalar") * fc.GetPersistentAsNumber("MAS_FDAI1_Power")))</variable>
			</ROTATION>
			<ROTATION id="2">
				<variable>fc.Conditioned(fc.YawRate() * (fc.GetPersistentAsNumber("MAS_FDAI1_RateScalar") * fc.GetPersistentAsNumber("MAS_FDAI1_Power")))</variable>
			</ROTATION>
			<ROTATION id="3">
				<variable>fc.Conditioned(fc.Roll() * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
			</ROTATION>
			<TRANSLATION id="0">
				<variable>fc.Conditioned(fdaiPitchError(1) * (fc.GetPersistentAsNumber("MAS_FDAI1_ErrorScalar") * fc.GetPersistentAsNumber("MAS_FDAI1_Power")))</variable>
			</TRANSLATION>
			<TRANSLATION id="1">
				<variable>fc.Conditioned(fdaiYawError(1) * (fc.GetPersistentAsNumber("MAS_FDAI1_ErrorScalar") * fc.GetPersistentAsNumber("MAS_FDAI1_Power")))</variable>
			</TRANSLATION>
			<TRANSLATION id="2">
				<variable>fc.Conditioned(fdaiRollError(1) * (fc.GetPersistentAsNumber("MAS_FDAI1_ErrorScalar") * fc.GetPersistentAsNumber("MAS_FDAI1_Power")))</variable>
			</TRANSLATION>
			<ANIMATION_PLAYER id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI1_ErrorFlag") * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
			</ANIMATION_PLAYER>
			<ANIMATION_PLAYER id="1">
				<variable>fdaiOffFlag(1)</variable>
			</ANIMATION_PLAYER>
			<ANIMATION_PLAYER id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI1_PortFlag") * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
			</ANIMATION_PLAYER>
			<COLOR_SHIFT id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI1_Power") * fc.GetPersistentAsNumber("Backlight"))</variable>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI1_Power") * fc.GetPersistentAsNumber("Backlight"))</variable>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI1_Power") * fc.GetPersistentAsNumber("Backlight"))</variable>
			</COLOR_SHIFT>
			<TEXT_LABEL>
				<text>1</text>
			</TEXT_LABEL>
			<MODULE>
				<variable>fdaiOffFlag(1)</variable>
			</MODULE>
		</prop>
		<prop>
			<name>MAS_ASET_FDAI-02</name>
			<style>FDAI</style>
			<startupScript>fdaiInitialize(2)</startupScript>
			<ROTATION id="0">
				<variable>fc.Conditioned(fc.RollRate() * (fc.GetPersistentAsNumber("MAS_FDAI2_RateScalar") * fc.GetPersistentAsNumber("MAS_FDAI2_Power")))</variable>
			</ROTATION>
			<ROTATION id="1">
				<variable>fc.Conditioned(fc.PitchRate() * (fc.GetPersistentAsNumber("MAS_FDAI2_RateScalar") * fc.GetPersistentAsNumber("MAS_FDAI2_Power")))</variable>
			</ROTATION>
			<ROTATION id="2">
				<variable>fc.Conditioned(fc.YawRate() * (fc.GetPersistentAsNumber("MAS_FDAI2_RateScalar") * fc.GetPersistentAsNumber("MAS_FDAI2_Power")))</variable>
			</ROTATION>
			<ROTATION id="3">
				<variable>fc.Conditioned(fc.Roll() * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
			</ROTATION>
			<TRANSLATION id="0">
				<variable>fc.Conditioned(fdaiPitchError(2) * (fc.GetPersistentAsNumber("MAS_FDAI2_ErrorScalar") * fc.GetPersistentAsNumber("MAS_FDAI2_Power")))</variable>
			</TRANSLATION>
			<TRANSLATION id="1">
				<variable>fc.Conditioned(fdaiYawError(2) * (fc.GetPersistentAsNumber("MAS_FDAI2_ErrorScalar") * fc.GetPersistentAsNumber("MAS_FDAI2_Power")))</variable>
			</TRANSLATION>
			<TRANSLATION id="2">
				<variable>fc.Conditioned(fdaiRollError(2) * (fc.GetPersistentAsNumber("MAS_FDAI2_ErrorScalar") * fc.GetPersistentAsNumber("MAS_FDAI2_Power")))</variable>
			</TRANSLATION>
			<ANIMATION_PLAYER id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI2_ErrorFlag") * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
			</ANIMATION_PLAYER>
			<ANIMATION_PLAYER id="1">
				<variable>fdaiOffFlag(2)</variable>
			</ANIMATION_PLAYER>
			<ANIMATION_PLAYER id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI2_PortFlag") * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
			</ANIMATION_PLAYER>
			<COLOR_SHIFT id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI2_Power") * fc.GetPersistentAsNumber("Backlight"))</variable>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI2_Power") * fc.GetPersistentAsNumber("Backlight"))</variable>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="2">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI2_Power") * fc.GetPersistentAsNumber("Backlight"))</variable>
			</COLOR_SHIFT>
			<TEXT_LABEL>
				<text>2</text>
			</TEXT_LABEL>
			<MODULE>
				<variable>fdaiOffFlag(2)</variable>
			</MODULE>
		</prop>
	</fdai>

	<!--
	Flight director / attitude indicator mechanical control panel.  Included here
	because MAS can support an arbitrary number of them, provided you create the
	supporting controls (power switch, rate and scale controls).
	-->
	<fdaiGMCP folder="FDAI">
		<style name="GMCP">
			<MODEL>
				<model>ASET/ASET_Props/Instruments/FDAI_GMCP/FDAI_GMCP</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>SelectorColliderPlus Action</name>
				<comment>Selector Dial action</comment>
				<collider>SelectorColliderPlus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<name>SelectorColliderMinus Action</name>
				<collider>SelectorColliderMinus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="2">
				<name>Direction Switch Action</name>
				<comment>Direction switcher</comment>
				<collider>DirectionSwitchColider</collider>
				<sound>ASET/ASET_Props/Sounds/tumbleClick01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<name>Direction Switch Animation</name>
				<animation>FDAIGMCPDirSwAnim</animation>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="3">
				<name>Sync SAS Switch Action</name>
				<comment>Sync SAS switcher</comment>
				<collider>SyncSwitchColider</collider>
				<sound>ASET/ASET_Props/Sounds/tumbleClick01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<name>Sync SAS Switch Animation</name>
				<animation>FDAIGMCPSyncSwAnim</animation>
			</ANIMATION_PLAYER>
			<ANIMATION id="0">
				<name>Error Warning anim</name>
				<comment>ERROR warning animation</comment>
				<animation>FDAIGMCPErrorWarnAnim</animation>
				<range>0, 1</range>
			</ANIMATION>
			<ANIMATION id="1">
				<name>Sync anim</name>
				<comment>SYNC animation</comment>
				<animation>FDAIGMCPSyncWarnAnim</animation>
				<range>0, 1</range>
			</ANIMATION>
			<ANIMATION id="2">
				<name>Selector Switch anim</name>
				<comment>Selector animation</comment>
				<animation>FDAIGMCPSelectorAnim</animation>
				<range>1, 7</range>
			</ANIMATION>
			<COLOR_SHIFT id="0">
				<name>Name-color backlight</name>
				<comment>backlight</comment>
				<transform>SignsObj, SyncWarningPlate, ErrorWarningPlate</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Mark-color backlight</name>
				<transform>SelectorPointerObj, DirectionSwitcherTumblerMark, SyncSwitcherTumblerMark</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_MARK_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<TEXT_LABEL>
				<name>Device ID Label</name>
				<transform>panelNumberObj</transform>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.0013, -0.0035</transformOffset>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<fontSize>2.5</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<emissive>never</emissive>
				<passiveColor>8, 8, 8, 255</passiveColor>
			</TEXT_LABEL>
		</style>
		<prop>
			<name>MAS_ASET_FDAIGMCP-01</name>
			<style>GMCP</style>
			<COLLIDER_EVENT id="0">
				<onClick>fdaiNextMode(1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fdaiPrevMode(1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="2">
				<onClick>fdaiTogglePositive(1)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<variable>fc.GetPersistentAsNumber("MAS_FDAI1_Positive")</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="3">
				<onClick>fdaiToggleSyncSAS(1)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<variable>fc.GetPersistentAsNumber("MAS_FDAI1_SyncSAS")</variable>
			</ANIMATION_PLAYER>
			<ANIMATION id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI1_ErrorFlag") * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
			</ANIMATION>
			<ANIMATION id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI1_SyncSAS") * fc.GetPersistentAsNumber("MAS_FDAI1_Power"))</variable>
			</ANIMATION>
			<ANIMATION id="2">
				<variable>fc.GetPersistentAsNumber("MAS_FDAI1_Mode")</variable>
			</ANIMATION>
			<TEXT_LABEL>
				<text>1</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_ASET_FDAIGMCP-02</name>
			<style>GMCP</style>
			<COLLIDER_EVENT id="0">
				<onClick>fdaiNextMode(2)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fdaiPrevMode(2)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="2">
				<onClick>fdaiTogglePositive(2)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<variable>fc.GetPersistentAsNumber("MAS_FDAI2_Positive")</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="3">
				<onClick>fdaiToggleSyncSAS(2)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<variable>fc.GetPersistentAsNumber("MAS_FDAI2_SyncSAS")</variable>
			</ANIMATION_PLAYER>
			<ANIMATION id="0">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI2_ErrorFlag") * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
			</ANIMATION>
			<ANIMATION id="1">
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_FDAI2_SyncSAS") * fc.GetPersistentAsNumber("MAS_FDAI2_Power"))</variable>
			</ANIMATION>
			<ANIMATION id="2">
				<variable>fc.GetPersistentAsNumber("MAS_FDAI2_Mode")</variable>
			</ANIMATION>
			<TEXT_LABEL>
				<text>2</text>
			</TEXT_LABEL>
		</prop>
	</fdaiGMCP>

	<!-- ASET signal lamps -->
	<SignalLamp folder="ASET_SignalLamp">
		<style name="Signal Lamp">
			<MODEL>
				<model>ASET/ASET_Props/Instruments/ASET_SignalLamp/ASET_SignalLamp</model>
			</MODEL>
			<MODEL_SCALE id="0">
				<name>Lamp Off</name>
				<transform>LampOFFObj</transform>
				<startScale>0, 0, 0</startScale>
				<endScale>-1, -1, -1</endScale>
				<variable>fc.Conditioned(1)</variable>
			</MODEL_SCALE>
			<MODEL_SCALE id="1">
				<name>Lamp On</name>
				<transform>LampObj</transform>
				<startScale>-1,-1,-1</startScale>
				<endScale>0, 0, 0</endScale>
				<variable>fc.Conditioned(1)</variable>
			</MODEL_SCALE>
			<COLOR_SHIFT>
				<name>Lamp Color</name>
				<transform>LampObj</transform>
				<passiveColor>COLOR_MOARdV_IndicatorLampOff</passiveColor>
				<colorName>_EmissiveColor</colorName>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_SignalLamp_ARRT_Error</name>
			<style>Signal Lamp</style>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<variable>ARRT_Error()</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_SignalLamp_IMP_Error</name>
			<style>Signal Lamp</style>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<variable>IMP_Error()</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_SignalLamp_Xpointer_Error</name>
			<style>Signal Lamp</style>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<variable>XPtr_Error()</variable>
			</COLOR_SHIFT>
		</prop>
	</SignalLamp>

	<!-- ASET Digital Indicator -->
	<DigitalIndicator folder="DigitalIndicator">
		<!-- Emulate a digital clock with 7 segment LED / LCD -->
		<style name="LED Clock">
			<MODEL>
				<model>ASET/ASET_Props/Instruments/DigitalIndicator/DigitalIndicator</model>
			</MODEL>
			<ANIMATION_PLAYER>
				<name>Power Off animation</name>
				<animation>DigitalIndicatorPowerOffAnim</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>1 - fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On"))</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Ghost Value</name>
				<transform>DigitIndicatorNameObj</transform>
				<transformOffset>0.080,-0.002</transformOffset>
				<fontSize>15</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Digital-7 Mono</font>
				<style>Italic</style>
				<alignment>Right</alignment>
				<anchor>UpperRight</anchor>
				<emissive>always</emissive>
				<passiveColor>COLOR_ASET_NUMINPUT_DISPLAY_GHOSTCOLOR</passiveColor>
				<text>888[@x8]88[@x16]88</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Value</name>
				<transform>DigitIndicatorNameObj</transform>
				<transformOffset>0.080,-0.002</transformOffset>
				<fontSize>15</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Digital-7 Mono</font>
				<style>Italic</style>
				<alignment>Right</alignment>
				<anchor>UpperRight</anchor>
				<emissive>always</emissive>
				<activeColor>COLOR_ASET_NUMINPUT_DISPLAY_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_NUMINPUT_DISPLAY_GHOSTCOLOR</passiveColor>
			</TEXT_LABEL>
		</style>
		<prop>
			<name>MAS_DigitalIndicator_Clock_Apsis</name>
			<style>LED Clock</style>
			<TEXT_LABEL id="1">
				<variable>fc.OrbitPeriod() > 0</variable>
				<text>{0:METHHH[@x8]mm[@x16]ss} $#$ MAS_Clock_Apsis()</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_DigitalIndicator_Clock_OrbitPeriod</name>
			<style>LED Clock</style>
			<TEXT_LABEL id="1">
				<variable>fc.OrbitPeriod() > 0</variable>
				<text>{0:METHHH[@x8]mm[@x16]ss} $#$ fc.OrbitPeriod()</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_DigitalIndicator_Clock_Stopwatch</name>
			<style>LED Clock</style>
			<TEXT_LABEL id="1">
				<variable>MAS_Clock_Stopwatch() > 0</variable>
				<text>{0:METHHH[@x8]mm[@x16]ss} $#$ MAS_Clock_Stopwatch()</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_DigitalIndicator_Clock_Time</name>
			<style>LED Clock</style>
			<TEXT_LABEL id="1">
				<variable>MAS_Clock_Time() > 0</variable>
				<text>{0:METHHH[@x8]mm[@x16]ss} $#$ MAS_Clock_Time()</text>
			</TEXT_LABEL>
		</prop>
	</DigitalIndicator>

	<!-- Retro (Apollo-ish) warning indicators -->
	<RetroWarningLight folder="RetroWarningLight">
		<style name="Retro Warning Light">
			<MODEL>
				<model>ASET/ASET_Props/Instruments/RetroWarningLight/RetroWarningLight</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Warning Text</name>
				<transform>WarningTextCenter</transform>
				<fontSize>3</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>never</emissive>
				<passiveColor>COLOR_MOARdV_UnlitBlackText</passiveColor>
			</TEXT_LABEL>
			<AUDIO_PLAYER>
				<name>alert</name>
				<sound>ASET/ASET_Props/Sounds/AlarmBeep02</sound>
				<trigger>ON</trigger>
			</AUDIO_PLAYER>
			<COLOR_SHIFT>
				<name>Alarm lights</name>
				<transform>RetroWarningLights</transform>
				<passiveColor>COLOR_MOARdV_RWL_Off</passiveColor>
				<colorName>_EmissiveColor</colorName>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<comment>endUV: y = 0.8 = Green; 0.6 = Red; 0.4 = Amber; 0.2 = White</comment>
				<name>Light shift</name>
				<transform>RetroWarningLights</transform>
				<startUV>0.0, 0.0</startUV>
				<layers>_MainTex _Emissive</layers>
			</TEXTURE_SHIFT>
		</style>
		<prop>
			<name>MAS_RWL_EngineFlameOut</name>
			<style>Retro Warning Light</style>
			<TEXT_LABEL>
				<text>ENGINE$$$FLAMEOUT</text>
			</TEXT_LABEL>
			<AUDIO_PLAYER>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
			</AUDIO_PLAYER>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_RWL_Red</activeColor>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
				<flashRate>0.5</flashRate>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0.0, 0.6</endUV>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_RWL_MasterAlarm</name>
			<style>Retro Warning Light</style>
			<TEXT_LABEL>
				<text>ALARM</text>
			</TEXT_LABEL>
			<AUDIO_PLAYER>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Master_Alarm"))</variable>
			</AUDIO_PLAYER>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_RWL_Red</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Master_Alarm"))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0.0, 0.6</endUV>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Master_Alarm"))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_RWL_MasterCaution</name>
			<style>Retro Warning Light</style>
			<TEXT_LABEL>
				<text>CAUTION</text>
			</TEXT_LABEL>
			<AUDIO_PLAYER>
				<sound>ASET/ASET_Props/Sounds/apollospec</sound>
				<volume>0.5</volume>
				<variable>fc.Conditioned(fc.PropellantStageThreshold(0.0, 0.1) + fc.PowerThreshold(0.0, 0.1) + fc.RcsStageThreshold(0.0, 0.1) + fc.ResourceThreshold("Ablator", 0.0, 0.1) + ((1 - parachute.GetParachuteArmedOrDeployed()) * fc.AtmosphereDepth() * (fc.VerticalSpeed() &lt; 0) * fc.VesselFlying()))</variable>
			</AUDIO_PLAYER>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_RWL_Amber</activeColor>
				<variable>fc.Conditioned(fc.PropellantStageThreshold(0.0, 0.1) + fc.PowerThreshold(0.0, 0.1) + fc.RcsStageThreshold(0.0, 0.1) + fc.ResourceThreshold("Ablator", 0.0, 0.1) + ((1 - parachute.GetParachuteArmedOrDeployed()) * fc.AtmosphereDepth() * (fc.VerticalSpeed() &lt; 0) * fc.VesselFlying()))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0.0, 0.4</endUV>
				<variable>fc.Conditioned(fc.PropellantStageThreshold(0.0, 0.1) + fc.PowerThreshold(0.0, 0.1) + fc.RcsStageThreshold(0.0, 0.1) + fc.ResourceThreshold("Ablator", 0.0, 0.1) + ((1 - parachute.GetParachuteArmedOrDeployed()) * fc.AtmosphereDepth() * (fc.VerticalSpeed() &lt; 0) * fc.VesselFlying()))</variable>
			</TEXTURE_SHIFT>
		</prop>
	</RetroWarningLight>
	<!-- Small plates used for labeling groups of controls -->
	<SmallPlate folder="SmallLabelPlate">
		<style name="Small Plate">
			<MODEL>
				<model>ASET/ASET_Props/Misc/SmallLabelPlate/SmallLabelPlate</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Name Plate</name>
				<transform>TextObj</transform>
				<fontSize>6.1</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<transformOffset>0.048,-0.006</transformOffset>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<emissive>active</emissive>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Plate Diffuse</name>
				<transform>SmallLablePlate</transform>
				<passiveColor>COLOR_ASET_PLATEBKG_DIFFUSE_PASSIVECOLOR</passiveColor>
				<colorName>_Color</colorName>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Plate Emissive</name>
				<transform>SmallLablePlate</transform>
				<passiveColor>COLOR_ASET_PLATEBKG_EMISSIVE_PASSIVECOLOR</passiveColor>
				<colorName>_EmissiveColor</colorName>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_SmallPlate_ActionGroup</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>ACTION GROUP</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_ARRT</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>ARRT</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Clock</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>CLOCK</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_CommNet</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>COMM NET</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Docking</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>DOCKING</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_IMP</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>IMP / Глобус</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Lights</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>LIGHTS</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_MechJeb</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>MECHJEB</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Parachute</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>PARACHUTE</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Period</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>ORB. PERIOD</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Power</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>POWER</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Radiator</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>RADIATOR</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_RCS</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>RCS</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_SAS</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>SAS / ATT CTRL</text>
			</TEXT_LABEL>
		</prop>
	</SmallPlate>
	<!-- Toggle switches (many, many styles) -->
	<ToggleSwitch folder="Switch_Toggle_Modular">
		<!-- Toggle switch with illuminated cap used to power panel subsystems -->
		<style name="Panel Power Switch">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_5</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
				<texture>Tggl_Cap_Diffuse,ASET/ASET_Props/Control/Switch_Toggle_Modular/models/Tggl_Cap_White</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Square glow border</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase_Bcklt_12</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Simple Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_SNGL</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Collider</name>
				<collider>SwitchCollider</collider>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ROTATION>
				<name>Lever Movement</name>
				<transform>SwitchGrp</transform>
				<startRotation>30,0,0</startRotation>
				<endRotation>-30,0,0</endRotation>
				<range>0, 1</range>
				<blend>true</blend>
				<cycleRate>1</cycleRate>
			</ROTATION>
			<TEXT_LABEL id="0">
				<name>Top Label</name>
				<transform>TextTopObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.026,-0.015</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
				<text>ON</text>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Border</name>
				<transform>GlowBorder, switchCapObj</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS.toggle_ARRT_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>ARRT_TogglePower()</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_ARRT_On")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_Clock_Power-T5M-B13-S</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_Clock_On")</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_Clock_On")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_FDAI1_Power-T5M-B13-S</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fdaiTogglePower(1)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_FDAI1_Power")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_FDAI2_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fdaiTogglePower(2)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_FDAI2_Power")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_FuelMonitor_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_FuelMonitor_Power")</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_FuelMonitor_Power")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS_toggle_IMP_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_IMP_Mode", fc.TogglePersistent("MAS_IMP_On") * fc.GetPersistentAsNumber("MAS_IMP_Mode_Select"))</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_IMP_On")</variable>
			</ROTATION>
 		</prop>
		<prop>
			<!-- This is identical to MAS_toggle_IMP_Power, just a different name -->
			<name>MAS.toggle_IMP_Power-T5M-B13-S</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_IMP_Mode", fc.TogglePersistent("MAS_IMP_On") * fc.GetPersistentAsNumber("MAS_IMP_Mode_Select"))</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_IMP_On")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_MJComp_Power-T5M-B13-S</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_MJComp_On")</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_On")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS_toggle_Xpointer_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>XPtr_TogglePower()</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_Xpointer_Power")</variable>
			</ROTATION>
		</prop>
		<!-- Toggle switch using the Type 2 animated switch -->
		<style name="Type 2 Anim Switch">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_2_ANIM</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Lever guard</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglGuard_Type_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Square glow border</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="4">
				<comment>Simple Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_SNGL</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>SwitchCollider</collider>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Switch animation</name>
				<animation>SwitchTumbleAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<name>Top Label</name>
				<transform>TextTopObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.026,-0.015</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_toggle_FDAI1_Power_T2_G2_B2_S</name>
			<style>Type 2 Anim Switch</style>
			<COLLIDER_EVENT>
				<onClick>fdaiTogglePower(1)</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>FDAI</text>
			</TEXT_LABEL>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_FDAI1_Power")</variable>
			</ANIMATION_PLAYER>
		</prop>
		<!-- Covered toggle switch (single-collider switch) -->
		<style name="Covered Toggle Switch">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_1_ANIM</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Switch guard</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglGuard_Type_3</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Switch cover</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCover_Type2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
				<texture>Tggl_COVER_Diffuse,ASET/ASET_Props/Control/Switch_Toggle_Modular/models/Tggl_COVER_Red</texture>
			</MODEL>
			<MODEL id="4">
				<comment>Simple Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_SNGL</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Cover Collider</name>
				<comment>Cover Action</comment>
				<collider>CoverCollider</collider>
				<onClick>fc.TogglePersistent("%AUTOID%-cover")</onClick>
				<sound>ASET/ASET_Props/Sounds/OpenSwitchCover</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<name>Cover animation</name>
				<animation>TgglCover_ANIM</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%-cover")</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<comment>Switch Action</comment>
				<name>Switch Collider</name>
				<collider>SwitchCollider</collider>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<name>Switch animation</name>
				<animation>SwitchTumbleAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<name>Panel Legend</name>
				<transform>TextPlateTopObj</transform>
				<fontSize>6</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.02526, 0.000</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Switch mark</name>
				<transform>TumblerMarkObj</transform>
				<activeColor>COLOR_ASET_SWITCHER_MARK_POSITIVECOLOR</activeColor>
				<passiveColor>0,0,0,255</passiveColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_toggle_Stage</name>
			<style>Covered Toggle Switch</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.ToggleStageLocked()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<variable>1 - fc.GetStageLocked()</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<onClick>fc.SetPersistent("%AUTOID%", fc.Stage() + 1)</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<text>STAGE</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_Engine</name>
			<style>Covered Toggle Switch</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.TogglePersistent("%AUTOID%-cover")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<variable>fc.GetPersistentAsNumber("%AUTOID%-cover")</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<onClick>fc.ToggleEnginesEnabled()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<variable>fc.GetEnginesEnabled()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<text>ENGINE</text>
			</TEXT_LABEL>
		</prop>
		<!-- The abort switch -->
		<style name="Abort Switch">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_1_ANIM</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Switch guard</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglGuard_Type_3</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="5">
				<comment>Base backlight</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase_Bcklt_15</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Switch cover</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCover_Type2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
				<texture>Tggl_COVER_Diffuse,ASET/ASET_Props/Control/Switch_Toggle_Modular/models/Tggl_COVER_Diffuse</texture>
			</MODEL>
			<MODEL id="4">
				<comment>Simple Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_SNGL</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Cover Collider</name>
				<comment>Cover Action</comment>
				<collider>CoverCollider</collider>
				<onClick>fc.TogglePersistent("%AUTOID%-cover")</onClick>
				<sound>ASET/ASET_Props/Sounds/OpenSwitchCover</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<name>Cover animation</name>
				<animation>TgglCover_ANIM</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%-cover")</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<comment>Switch Action</comment>
				<name>Switch Collider</name>
				<collider>SwitchCollider</collider>
				<onClick>fc.SetPersistent("%AUTOID%", fc.Abort())</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<name>Switch animation</name>
				<animation>SwitchTumbleAnim</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<name>Panel Legend</name>
				<transform>TextTopObj</transform>
				<fontSize>6</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.026, -0.008</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
				<text>ABORT</text>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Switch mark</name>
				<transform>TumblerMarkObj</transform>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<passiveColor>0,0,0,255</passiveColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_toggle_Abort</name>
			<style>Abort Switch</style>
		</prop>
		<!-- Toggle switch that is normally-open in the center, able to be moved to either the top or bottom to trigger effects -->
		<style name="Single Pole Center Off">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_1</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Guard</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglGuard_Type_1</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Square glow border</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="4">
				<comment>Double Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_DBL</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Collider</name>
				<collider>SwitchColliderUP</collider>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
				<autoRepeat>0.1</autoRepeat>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<name>Collider</name>
				<collider>SwitchColliderDOWN</collider>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
				<autoRepeat>0.1</autoRepeat>
			</COLLIDER_EVENT>
			<ROTATION>
				<name>Lever Movement</name>
				<transform>SwitchGrp</transform>
				<startRotation>30,0,0</startRotation>
				<endRotation>-30,0,0</endRotation>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
				<range>-0.05, 0.05</range>
				<blend>true</blend>
				<cycleRate>0.5</cycleRate>
			</ROTATION>
			<TEXT_LABEL id="0">
				<name>Top Label</name>
				<transform>TextTopObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.026,-0.015</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder, TumblerMarkObj</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_toggle_ThrottleLimitValue</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.SetThrottleLimit(fc.GetThrottleLimit() + fc.SetPersistent("%AUTOID%", 0.05))</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.SetThrottleLimit(fc.GetThrottleLimit() + fc.SetPersistent("%AUTOID%", -0.05))</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>INC</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Bottom Label</name>
				<transform>TextBottomObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>UpperCenter</anchor>
				<transformOffset>0.026, 0.013</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
				<text>DEC</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_GimbalLimitValue</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.SetGimbalLimit(fc.GetGimbalLimit() + fc.SetPersistent("%AUTOID%", 0.05))</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.SetGimbalLimit(fc.GetGimbalLimit() + fc.SetPersistent("%AUTOID%", -0.05))</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>INC</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Bottom Label</name>
				<transform>TextBottomObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>UpperCenter</anchor>
				<transformOffset>0.026, 0.013</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
				<text>DEC</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_InstBacklight_Dimmer</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("Backlight", fc.SetPersistent("%AUTOID%", 0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("Backlight", fc.SetPersistent("%AUTOID%", -0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>INST.$$$BACKLIGHT</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_LeftCabin_Dimmer</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("LeftCabin_Light", fc.SetPersistent("%AUTOID%", 0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("LeftCabin_Light", fc.SetPersistent("%AUTOID%", -0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>LEFT CABIN$$$LAMP</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_RightCabin_Dimmer</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("RightCabin_Light", fc.SetPersistent("%AUTOID%", 0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("RightCabin_Light", fc.SetPersistent("%AUTOID%", -0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>RIGHT CABIN$$$LAMP</text>
			</TEXT_LABEL>
		</prop>
	</ToggleSwitch>
	<!-- Rotary switches (eg, rheostat dimmers, mechanical rotating knobs -->
	<RotarySwitch folder="switchRotary">
		<style name="Rheostat Light">
			<MODEL id="0">
				<comment>Knob model</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_Model</model>
				<texture>SwitchRotaryDiffuse,ASET/ASET_Props/Control/SwitchRotary/model/SwitchRotaryDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Double collider</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_DoubleCollider_L-R</model>
			</MODEL>
			<MODEL id="2">
				<comment>Switcher position marks with text objects</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_Dimmer_Mark</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Collider +</name>
				<collider>ColliderPlus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
				<autoRepeat>0.1</autoRepeat>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<name>Collider -</name>
				<collider>ColliderMinus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
				<autoRepeat>0.1</autoRepeat>
			</COLLIDER_EVENT>
			<ROTATION>
				<name>Knob position</name>
				<transform>swRotaryLoc</transform>
				<startRotation>0,-145,0</startRotation>
				<endRotation>0,145,0</endRotation>
				<longPath>true</longPath>
				<range>0, 1</range>
				<blend>true</blend>
				<speed>6.0</speed>
			</ROTATION>
			<TEXT_LABEL>
				<name>Top Label</name>
				<transform>TopNameTextObj</transform>
				<fontSize>5.7</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Pointer Backlight</name>
				<transform>swRotaryPointerObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_MARK_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Circle Mark and Rotary Circle Backlight</name>
				<transform>swRotaryCircleMarkObj, swRotaryCircleObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<style name="3 pos switch">
			<MODEL id="0">
				<comment>Knob model</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_Model</model>
				<texture>SwitchRotaryDiffuse,ASET/ASET_Props/Control/SwitchRotary/model/SwitchRotaryDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Double collider</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_DoubleCollider_L-R</model>
			</MODEL>
			<MODEL id="2">
				<comment>Switcher position marks with text objects</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_3_Marks</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Collider +</name>
				<collider>ColliderPlus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<name>Collider -</name>
				<collider>ColliderMinus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ROTATION>
				<name>Knob position</name>
				<transform>swRotaryLoc</transform>
				<startRotation>0,-55,0</startRotation>
				<endRotation>0,55,0</endRotation>
				<longPath>true</longPath>
				<range>0, 1</range>
				<blend>true</blend>
				<speed>6.0</speed>
			</ROTATION>
			<TEXT_LABEL id="0">
				<name>1 Mark</name>
				<transform>LeftTextObj</transform>
				<fontSize>4</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Right</alignment>
				<anchor>LowerRight</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>2 Mark</name>
				<transform>CenterTextObj</transform>
				<fontSize>4</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>3 Mark</name>
				<transform>RightTextObj</transform>
				<fontSize>4</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Left</alignment>
				<anchor>LowerLeft</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Pointer Backlight</name>
				<transform>swRotaryPointerObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_MARK_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Circle Mark and Rotary Circle Backlight</name>
				<transform>swRotaryCircleMarkObj, swRotaryCircleObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_swRotary_InstrumentLight</name>
			<style>Rheostat Light</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("Backlight", 0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("Backlight", -0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("Backlight")</variable>
			</ROTATION>
			<TEXT_LABEL>
				<text>INST.$$$PANEL</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_swRotary_LeftCabinLight</name>
			<style>Rheostat Light</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("LeftCabin_Light", 0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("LeftCabin_Light", -0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("LeftCabin_Light")</variable>
			</ROTATION>
			<TEXT_LABEL>
				<text>LEFT$$$CABIN</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_swRotary_RightCabinLight</name>
			<style>Rheostat Light</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("RightCabin_Light", 0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("RightCabin_Light", -0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("RightCabin_Light")</variable>
			</ROTATION>
			<TEXT_LABEL>
				<text>RIGHT$$$CABIN</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_swRotary_UpperCabinLight</name>
			<style>Rheostat Light</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("UpperCabin_Light", 0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("UpperCabin_Light", -0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("UpperCabin_Light")</variable>
			</ROTATION>
			<TEXT_LABEL>
				<text>UPPER$$$CABIN</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS.swRotary3_IMPModeSelect</name>
			<style>3 pos switch</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.SetPersistent("MAS_IMP_Mode", fc.GetPersistentAsNumber("MAS_IMP_On") * fc.AddPersistentClamped("MAS_IMP_Mode_Select", 1, 1, 3))</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.SetPersistent("MAS_IMP_Mode", fc.GetPersistentAsNumber("MAS_IMP_On") * fc.AddPersistentClamped("MAS_IMP_Mode_Select", -1, 1, 3))</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_IMP_Mode_Select")</variable>
				<range>1, 3</range>
			</ROTATION>
			<TEXT_LABEL id="0">
				<text>VESSEL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>TARGET</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<text>LANDING</text>
			</TEXT_LABEL>
		</prop>
	</RotarySwitch>
</PropConfig>
