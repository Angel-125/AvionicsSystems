<PropConfig>
	<!-- 
	This file is a prop configuration template for the Prop Config utility
	described on the MAS wiki at https://github.com/MOARdV/AvionicsSystems/wiki/Prop-Config
	
	The tool and this XML file are used to quickly generate multiple props
	without the tedious effort of copying config files and making small edits
	while hoping you didn't overlook something.
	
	This file is licensed by MOARdV under the Creative Commons Attribution-Share Alike
	4.0 International license (CC BY-SA) https://creativecommons.org/licenses/by-sa/4.0/
	-->
	<!-- ASET signal lamps -->
	<SignalLamp folder="ASET_SignalLamp">
		<style name="Signal Lamp">
			<MODEL>
				<model>ASET/ASET_Props/Instruments/ASET_SignalLamp/ASET_SignalLamp</model>
			</MODEL>
			<MODEL_SCALE id="0">
				<name>Lamp Off</name>
				<transform>LampOFFObj</transform>
				<startScale>0, 0, 0</startScale>
				<endScale>-1, -1, -1</endScale>
				<variable>fc.Conditioned(1)</variable>
			</MODEL_SCALE>
			<MODEL_SCALE id="1">
				<name>Lamp On</name>
				<transform>LampObj</transform>
				<startScale>-1,-1,-1</startScale>
				<endScale>0, 0, 0</endScale>
				<variable>fc.Conditioned(1)</variable>
			</MODEL_SCALE>
			<COLOR_SHIFT>
				<name>Lamp Color</name>
				<transform>LampObj</transform>
				<passiveColor>COLOR_MOARdV_IndicatorLampOff</passiveColor>
				<colorName>_EmissiveColor</colorName>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_SignalLamp_ARRT_Error</name>
			<style>Signal Lamp</style>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<variable>ARRT_Error()</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_SignalLamp_IMP_Error</name>
			<style>Signal Lamp</style>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<variable>IMP_Error()</variable>
			</COLOR_SHIFT>
		</prop>
		<prop>
			<name>MAS_SignalLamp_Xpointer_Error</name>
			<style>Signal Lamp</style>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<variable>XPtr_Error()</variable>
			</COLOR_SHIFT>
		</prop>
	</SignalLamp>
	<!-- ASET Digital Indicator -->
	<DigitalIndicator folder="DigitalIndicator">
		<!-- Emulate a digital clock with 7 segment LED / LCD -->
		<style name="LED Clock">
			<MODEL>
				<model>ASET/ASET_Props/Instruments/DigitalIndicator/DigitalIndicator</model>
			</MODEL>
			<ANIMATION_PLAYER>
				<name>Power Off animation</name>
				<animation>DigitalIndicatorPowerOffAnim</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>1 - fc.Conditioned(fc.GetPersistentAsNumber("MAS_Clock_On"))</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Ghost Value</name>
				<transform>DigitIndicatorNameObj</transform>
				<transformOffset>0.080,-0.002</transformOffset>
				<fontSize>15</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Digital-7 Mono</font>
				<style>Italic</style>
				<alignment>Right</alignment>
				<anchor>UpperRight</anchor>
				<emissive>always</emissive>
				<passiveColor>COLOR_ASET_NUMINPUT_DISPLAY_GHOSTCOLOR</passiveColor>
				<text>888[@x8]88[@x16]88</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Value</name>
				<transform>DigitIndicatorNameObj</transform>
				<transformOffset>0.080,-0.002</transformOffset>
				<fontSize>15</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Digital-7 Mono</font>
				<style>Italic</style>
				<alignment>Right</alignment>
				<anchor>UpperRight</anchor>
				<emissive>always</emissive>
				<activeColor>COLOR_ASET_NUMINPUT_DISPLAY_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_NUMINPUT_DISPLAY_GHOSTCOLOR</passiveColor>
			</TEXT_LABEL>
		</style>
		<prop>
			<name>MAS_DigitalIndicator_Clock_Apsis</name>
			<style>LED Clock</style>
			<TEXT_LABEL id="1">
				<variable>fc.OrbitPeriod() > 0</variable>
				<text>{0:METHHH[@x8]mm[@x16]ss} $#$ MAS_Clock_Apsis()</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_DigitalIndicator_Clock_OrbitPeriod</name>
			<style>LED Clock</style>
			<TEXT_LABEL id="1">
				<variable>fc.OrbitPeriod() > 0</variable>
				<text>{0:METHHH[@x8]mm[@x16]ss} $#$ fc.OrbitPeriod()</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_DigitalIndicator_Clock_Stopwatch</name>
			<style>LED Clock</style>
			<TEXT_LABEL id="1">
				<variable>MAS_Clock_Stopwatch() > 0</variable>
				<text>{0:METHHH[@x8]mm[@x16]ss} $#$ MAS_Clock_Stopwatch()</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_DigitalIndicator_Clock_Time</name>
			<style>LED Clock</style>
			<TEXT_LABEL id="1">
				<variable>MAS_Clock_Time() > 0</variable>
				<text>{0:METHHH[@x8]mm[@x16]ss} $#$ MAS_Clock_Time()</text>
			</TEXT_LABEL>
		</prop>
	</DigitalIndicator>
	<!-- Contemporary highly-configurable push buttons -->
	<PushButton folder="Push_Button_Modular">
		<style name="Undecorated Black Full Cap">
			<!--
			Full black cap, collider, no borders or captions.  Defaults to a green "ON" caption
			for the lower half of the switch.
			Example: Action Group switches
			-->
			<MODEL id="0">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap</model>
				<texture>pb_Full_Cap_Black,ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Full_Cap_Black</texture>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<model>ASET/ASET_Props/Control/Push_Button_Modular/models/pb_Collider</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>pb_Collider</collider>
				<sound>ASET/ASET_Props/Sounds/pb_Push02</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Button press animation</name>
				<animation>pb_PushAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<name>Upper Caption</name>
				<transform>Legend_Upper</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_MOARdV_ActiveBacklightText</activeColor>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Lower Caption</name>
				<transform>Legend_Lower</transform>
				<fontSize>3.9</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>active</emissive>
				<activeColor>COLOR_MOARdV_IndicatorLampGreen</activeColor>
				<passiveColor>COLOR_MOARdV_PassiveBacklightText</passiveColor>
				<text>● ON ●</text>
			</TEXT_LABEL>
		</style>
		<prop>
			<name>MAS_pb_AG0</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(0)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(0)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(0) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG0</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(0) * fc.ActionGroupHasActions(0))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG1</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(1)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(1)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(1) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG1</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(1) * fc.ActionGroupHasActions(1))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG2</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(2)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(2)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(2) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG2</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(2) * fc.ActionGroupHasActions(2))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG3</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(3)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(3)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(3) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG3</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(3) * fc.ActionGroupHasActions(3))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG4</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(4)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(4)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(4) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG4</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(4) * fc.ActionGroupHasActions(4))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG5</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(5)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(5)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(5) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG5</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(5) * fc.ActionGroupHasActions(5))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG6</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(6)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(6)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(6) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG6</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(6) * fc.ActionGroupHasActions(6))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG7</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(7)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(7)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(7) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG7</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(7) * fc.ActionGroupHasActions(7))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG8</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(8)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(8)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(8) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG8</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(8) * fc.ActionGroupHasActions(8))</variable>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_pb_AG9</name>
			<style>Undecorated Black Full Cap</style>
			<COLLIDER_EVENT>
				<onClick>fc.ToggleActionGroup(9)</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<variable>fc.GetActionGroup(9)</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL id="0">
				<variable>fc.Conditioned(fc.ActionGroupHasActions(9) * fc.GetPersistentAsNumber("Backlight"))</variable>
				<text>AG9</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<variable>fc.Conditioned(fc.GetActionGroup(9) * fc.ActionGroupHasActions(9))</variable>
			</TEXT_LABEL>
		</prop>
	</PushButton>
	<!-- Retro (Apollo-ish) warning indicators -->
	<RetroWarningLight folder="RetroWarningLight">
		<style name="Retro Warning Light">
			<MODEL>
				<model>ASET/ASET_Props/Instruments/RetroWarningLight/RetroWarningLight</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Warning Text</name>
				<transform>WarningTextCenter</transform>
				<fontSize>3</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<emissive>never</emissive>
				<passiveColor>COLOR_MOARdV_UnlitBlackText</passiveColor>
			</TEXT_LABEL>
			<AUDIO_PLAYER>
				<name>alert</name>
				<sound>ASET/ASET_Props/Sounds/AlarmBeep02</sound>
				<trigger>ON</trigger>
			</AUDIO_PLAYER>
			<COLOR_SHIFT>
				<name>Alarm lights</name>
				<transform>RetroWarningLights</transform>
				<passiveColor>COLOR_MOARdV_RWL_Off</passiveColor>
				<colorName>_EmissiveColor</colorName>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<comment>endUV: y = 0.8 = Green; 0.6 = Red; 0.4 = Amber; 0.2 = White</comment>
				<name>Light shift</name>
				<transform>RetroWarningLights</transform>
				<startUV>0.0, 0.0</startUV>
				<layers>_MainTex _Emissive</layers>
			</TEXTURE_SHIFT>
		</style>
		<prop>
			<name>MAS_RWL_EngineFlameOut</name>
			<style>Retro Warning Light</style>
			<TEXT_LABEL>
				<text>ENGINE$$$FLAMEOUT</text>
			</TEXT_LABEL>
			<AUDIO_PLAYER>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
			</AUDIO_PLAYER>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_RWL_Red</activeColor>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
				<flashRate>0.5</flashRate>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0.0, 0.6</endUV>
				<variable>fc.Conditioned(fc.EngineFlameout())</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_RWL_MasterAlarm</name>
			<style>Retro Warning Light</style>
			<TEXT_LABEL>
				<text>ALARM</text>
			</TEXT_LABEL>
			<AUDIO_PLAYER>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Master_Alarm"))</variable>
			</AUDIO_PLAYER>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_RWL_Red</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Master_Alarm"))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0.0, 0.6</endUV>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("MAS_Master_Alarm"))</variable>
			</TEXTURE_SHIFT>
		</prop>
		<prop>
			<name>MAS_RWL_MasterCaution</name>
			<style>Retro Warning Light</style>
			<TEXT_LABEL>
				<text>CAUTION</text>
			</TEXT_LABEL>
			<AUDIO_PLAYER>
				<sound>ASET/ASET_Props/Sounds/apollospec</sound>
				<volume>0.5</volume>
				<variable>fc.Conditioned(fc.PropellantStageThreshold(0.0, 0.1) + fc.PowerThreshold(0.0, 0.1) + fc.RcsStageThreshold(0.0, 0.1) + fc.ResourceThreshold("Ablator", 0.0, 0.1) + ((1 - parachute.GetParachuteArmedOrDeployed()) * fc.AtmosphereDepth() * (fc.VerticalSpeed() &lt; 0) * fc.VesselFlying()))</variable>
			</AUDIO_PLAYER>
			<COLOR_SHIFT>
				<activeColor>COLOR_MOARdV_RWL_Amber</activeColor>
				<variable>fc.Conditioned(fc.PropellantStageThreshold(0.0, 0.1) + fc.PowerThreshold(0.0, 0.1) + fc.RcsStageThreshold(0.0, 0.1) + fc.ResourceThreshold("Ablator", 0.0, 0.1) + ((1 - parachute.GetParachuteArmedOrDeployed()) * fc.AtmosphereDepth() * (fc.VerticalSpeed() &lt; 0) * fc.VesselFlying()))</variable>
			</COLOR_SHIFT>
			<TEXTURE_SHIFT>
				<endUV>0.0, 0.4</endUV>
				<variable>fc.Conditioned(fc.PropellantStageThreshold(0.0, 0.1) + fc.PowerThreshold(0.0, 0.1) + fc.RcsStageThreshold(0.0, 0.1) + fc.ResourceThreshold("Ablator", 0.0, 0.1) + ((1 - parachute.GetParachuteArmedOrDeployed()) * fc.AtmosphereDepth() * (fc.VerticalSpeed() &lt; 0) * fc.VesselFlying()))</variable>
			</TEXTURE_SHIFT>
		</prop>
	</RetroWarningLight>
	<!-- Small plates used for labeling groups of controls -->
	<SmallPlate folder="SmallLabelPlate">
		<style name="Small Plate">
			<MODEL>
				<model>ASET/ASET_Props/Misc/SmallLabelPlate/SmallLabelPlate</model>
			</MODEL>
			<TEXT_LABEL>
				<name>Name Plate</name>
				<transform>TextObj</transform>
				<fontSize>6.1</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>MiddleCenter</anchor>
				<transformOffset>0.048,-0.006</transformOffset>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<emissive>active</emissive>
				<passiveColor>COLOR_MOARdV_UnlitText</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Plate Diffuse</name>
				<transform>SmallLablePlate</transform>
				<passiveColor>COLOR_ASET_PLATEBKG_DIFFUSE_PASSIVECOLOR</passiveColor>
				<colorName>_Color</colorName>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Plate Emissive</name>
				<transform>SmallLablePlate</transform>
				<passiveColor>COLOR_ASET_PLATEBKG_EMISSIVE_PASSIVECOLOR</passiveColor>
				<colorName>_EmissiveColor</colorName>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_SmallPlate_ActionGroup</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>ACTION GROUP</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_ARRT</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>ARRT</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Clock</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>CLOCK</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_CommNet</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>COMM NET</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Docking</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>DOCKING</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_IMP</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>IMP / Глобус</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Lights</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>LIGHTS</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_MechJeb</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>MECHJEB</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Parachute</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>PARACHUTE</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Period</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>ORB. PERIOD</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Power</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>POWER</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_Radiator</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>RADIATOR</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_RCS</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>RCS</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_SmallPlate_SAS</name>
			<style>Small Plate</style>
			<TEXT_LABEL>
				<text>SAS / ATT CTRL</text>
			</TEXT_LABEL>
		</prop>
	</SmallPlate>
	<!-- Toggle switches (many, many styles) -->
	<ToggleSwitch folder="Switch_Toggle_Modular">
		<!-- Toggle switch with illuminated cap used to power panel subsystems -->
		<style name="Panel Power Switch">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_5</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
				<texture>Tggl_Cap_Diffuse,ASET/ASET_Props/Control/Switch_Toggle_Modular/models/Tggl_Cap_White</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Square glow border</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase_Bcklt_12</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Simple Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_SNGL</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Collider</name>
				<collider>SwitchCollider</collider>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ROTATION>
				<name>Lever Movement</name>
				<transform>SwitchGrp</transform>
				<startRotation>30,0,0</startRotation>
				<endRotation>-30,0,0</endRotation>
				<range>0, 1</range>
				<blend>true</blend>
				<cycleRate>1</cycleRate>
			</ROTATION>
			<TEXT_LABEL id="0">
				<name>Top Label</name>
				<transform>TextTopObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.026,-0.015</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
				<text>ON</text>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Border</name>
				<transform>GlowBorder, switchCapObj</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS.toggle_ARRT_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>ARRT_TogglePower()</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_ARRT_On")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_Clock_Power-T5M-B13-S</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_Clock_On")</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_Clock_On")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_FDAI1_Power-T5M-B13-S</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>FDAI1_TogglePower()</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_FDAI1_Power")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_FDAI2_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>FDAI2_TogglePower()</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_FDAI2_Power")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_FuelMonitor_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_FuelMonitor_Power")</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_FuelMonitor_Power")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS_toggle_IMP_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_IMP_Mode", fc.TogglePersistent("MAS_IMP_On") * fc.GetPersistentAsNumber("MAS_IMP_Mode_Select"))</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_IMP_On")</variable>
			</ROTATION>
 		</prop>
		<prop>
			<!-- This is identical to MAS_toggle_IMP_Power, just a different name -->
			<name>MAS.toggle_IMP_Power-T5M-B13-S</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.SetPersistent("MAS_IMP_Mode", fc.TogglePersistent("MAS_IMP_On") * fc.GetPersistentAsNumber("MAS_IMP_Mode_Select"))</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_IMP_On")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS.toggle_MJComp_Power-T5M-B13-S</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>fc.TogglePersistent("MAS_MJComp_On")</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_MJComp_On")</variable>
			</ROTATION>
		</prop>
		<prop>
			<name>MAS_toggle_Xpointer_Power</name>
			<style>Panel Power Switch</style>
			<COLLIDER_EVENT>
				<onClick>XPtr_TogglePower()</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_Xpointer_Power")</variable>
			</ROTATION>
		</prop>
		<!-- Toggle switch using the Type 2 animated switch -->
		<style name="Type 2 Anim Switch">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_2_ANIM</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Lever guard</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglGuard_Type_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Square glow border</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="4">
				<comment>Simple Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_SNGL</model>
			</MODEL>
			<COLLIDER_EVENT>
				<name>Collider</name>
				<collider>SwitchCollider</collider>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER>
				<name>Switch animation</name>
				<animation>SwitchTumbleAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<name>Top Label</name>
				<transform>TextTopObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.026,-0.015</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_toggle_FDAI1_Power_T2_G2_B2_S</name>
			<style>Type 2 Anim Switch</style>
			<COLLIDER_EVENT>
				<onClick>FDAI1_TogglePower()</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL>
				<text>FDAI</text>
			</TEXT_LABEL>
			<ANIMATION_PLAYER>
				<variable>fc.GetPersistentAsNumber("MAS_FDAI1_Power")</variable>
			</ANIMATION_PLAYER>
		</prop>
		<!-- Covered toggle switch (single-collider switch) -->
		<style name="Covered Toggle Switch">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_1_ANIM</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Switch guard</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglGuard_Type_3</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Switch cover</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCover_Type2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
				<texture>Tggl_COVER_Diffuse,ASET/ASET_Props/Control/Switch_Toggle_Modular/models/Tggl_COVER_Red</texture>
			</MODEL>
			<MODEL id="4">
				<comment>Simple Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_SNGL</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Cover Collider</name>
				<comment>Cover Action</comment>
				<collider>CoverCollider</collider>
				<onClick>fc.TogglePersistent("%AUTOID%-cover")</onClick>
				<sound>ASET/ASET_Props/Sounds/OpenSwitchCover</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<name>Cover animation</name>
				<animation>TgglCover_ANIM</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%-cover")</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<comment>Switch Action</comment>
				<name>Switch Collider</name>
				<collider>SwitchCollider</collider>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<name>Switch animation</name>
				<animation>SwitchTumbleAnim</animation>
				<animationSpeed>1.0</animationSpeed>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<name>Panel Legend</name>
				<transform>TextPlateTopObj</transform>
				<fontSize>6</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.02526, 0.000</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Switch mark</name>
				<transform>TumblerMarkObj</transform>
				<activeColor>COLOR_ASET_SWITCHER_MARK_POSITIVECOLOR</activeColor>
				<passiveColor>0,0,0,255</passiveColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_toggle_Stage</name>
			<style>Covered Toggle Switch</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.ToggleStageLocked()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<variable>1 - fc.GetStageLocked()</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<onClick>fc.SetPersistent("%AUTOID%", fc.Stage() + 1)</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<text>STAGE</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_Engine</name>
			<style>Covered Toggle Switch</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.TogglePersistent("%AUTOID%-cover")</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<variable>fc.GetPersistentAsNumber("%AUTOID%-cover")</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<onClick>fc.ToggleEnginesEnabled()</onClick>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<variable>fc.GetEnginesEnabled()</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<text>ENGINE</text>
			</TEXT_LABEL>
		</prop>
		<!-- The abort switch -->
		<style name="Abort Switch">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_1_ANIM</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Switch guard</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglGuard_Type_3</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="5">
				<comment>Base backlight</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase_Bcklt_15</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Switch cover</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCover_Type2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
				<texture>Tggl_COVER_Diffuse,ASET/ASET_Props/Control/Switch_Toggle_Modular/models/Tggl_COVER_Diffuse</texture>
			</MODEL>
			<MODEL id="4">
				<comment>Simple Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_SNGL</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Cover Collider</name>
				<comment>Cover Action</comment>
				<collider>CoverCollider</collider>
				<onClick>fc.TogglePersistent("%AUTOID%-cover")</onClick>
				<sound>ASET/ASET_Props/Sounds/OpenSwitchCover</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="0">
				<name>Cover animation</name>
				<animation>TgglCover_ANIM</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%-cover")</variable>
			</ANIMATION_PLAYER>
			<COLLIDER_EVENT id="1">
				<comment>Switch Action</comment>
				<name>Switch Collider</name>
				<collider>SwitchCollider</collider>
				<onClick>fc.SetPersistent("%AUTOID%", fc.Abort())</onClick>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ANIMATION_PLAYER id="1">
				<name>Switch animation</name>
				<animation>SwitchTumbleAnim</animation>
				<animationSpeed>1.0</animationSpeed>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
			</ANIMATION_PLAYER>
			<TEXT_LABEL>
				<name>Panel Legend</name>
				<transform>TextTopObj</transform>
				<fontSize>6</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.026, -0.008</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
				<text>ABORT</text>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Border</name>
				<transform>GlowBorder</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Switch mark</name>
				<transform>TumblerMarkObj</transform>
				<activeColor>COLOR_MOARdV_IndicatorLampRed</activeColor>
				<passiveColor>0,0,0,255</passiveColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_toggle_Abort</name>
			<style>Abort Switch</style>
		</prop>
		<!-- Toggle switch that is normally-open in the center, able to be moved to either the top or bottom to trigger effects -->
		<style name="Single Pole Center Off">
			<MODEL id="0">
				<comment>Base</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Basic toggle</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglLever_Type_1</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="2">
				<comment>Guard</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglGuard_Type_1</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="3">
				<comment>Square glow border</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglBase_Bcklt_2</model>
				<texture>Switch_TUMBLEDiffuse,ASET/ASET_Props/Control/Switch_Tumble/Switch_TUMBLEDiffuse</texture>
			</MODEL>
			<MODEL id="4">
				<comment>Double Collider</comment>
				<model>ASET/ASET_Props/Control/Switch_Toggle_Modular/models/TgglCollider_DBL</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Collider</name>
				<collider>SwitchColliderUP</collider>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
				<autoRepeat>0.1</autoRepeat>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<name>Collider</name>
				<collider>SwitchColliderDOWN</collider>
				<onRelease>fc.SetPersistent("%AUTOID%", 0)</onRelease>
				<sound>ASET/ASET_Props/Sounds/RPB01</sound>
				<volume>1</volume>
				<autoRepeat>0.1</autoRepeat>
			</COLLIDER_EVENT>
			<ROTATION>
				<name>Lever Movement</name>
				<transform>SwitchGrp</transform>
				<startRotation>30,0,0</startRotation>
				<endRotation>-30,0,0</endRotation>
				<variable>fc.GetPersistentAsNumber("%AUTOID%")</variable>
				<range>-0.05, 0.05</range>
				<blend>true</blend>
				<cycleRate>0.5</cycleRate>
			</ROTATION>
			<TEXT_LABEL id="0">
				<name>Top Label</name>
				<transform>TextTopObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<transformOffset>0.026,-0.015</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT>
				<name>Border</name>
				<transform>GlowBorder, TumblerMarkObj</transform>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_toggle_ThrottleLimitValue</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.SetThrottleLimit(fc.GetThrottleLimit() + fc.SetPersistent("%AUTOID%", 0.05))</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.SetThrottleLimit(fc.GetThrottleLimit() + fc.SetPersistent("%AUTOID%", -0.05))</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>INC</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Bottom Label</name>
				<transform>TextBottomObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>UpperCenter</anchor>
				<transformOffset>0.026, 0.013</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
				<text>DEC</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_GimbalLimitValue</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.SetGimbalLimit(fc.GetGimbalLimit() + fc.SetPersistent("%AUTOID%", 0.05))</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.SetGimbalLimit(fc.GetGimbalLimit() + fc.SetPersistent("%AUTOID%", -0.05))</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>INC</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>Bottom Label</name>
				<transform>TextBottomObj</transform>
				<fontSize>6.1</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>UpperCenter</anchor>
				<transformOffset>0.026, 0.013</transformOffset>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
				<text>DEC</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_InstBacklight_Dimmer</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("Backlight", fc.SetPersistent("%AUTOID%", 0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("Backlight", fc.SetPersistent("%AUTOID%", -0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>INST.$$$BACKLIGHT</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_LeftCabin_Dimmer</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("LeftCabin_Light", fc.SetPersistent("%AUTOID%", 0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("LeftCabin_Light", fc.SetPersistent("%AUTOID%", -0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>LEFT CABIN$$$LAMP</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_toggle_RightCabin_Dimmer</name>
			<style>Single Pole Center Off</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("RightCabin_Light", fc.SetPersistent("%AUTOID%", 0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("RightCabin_Light", fc.SetPersistent("%AUTOID%", -0.05), 0, 1)</onClick>
			</COLLIDER_EVENT>
			<TEXT_LABEL id="0">
				<text>RIGHT CABIN$$$LAMP</text>
			</TEXT_LABEL>
		</prop>
	</ToggleSwitch>
	<!-- Rotary switches (eg, rheostat dimmers, mechanical rotating knobs -->
	<RotarySwitch folder="switchRotary">
		<style name="Rheostat Light">
			<MODEL id="0">
				<comment>Knob model</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_Model</model>
				<texture>SwitchRotaryDiffuse,ASET/ASET_Props/Control/SwitchRotary/model/SwitchRotaryDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Double collider</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_DoubleCollider_L-R</model>
			</MODEL>
			<MODEL id="2">
				<comment>Switcher position marks with text objects</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_Dimmer_Mark</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Collider +</name>
				<collider>ColliderPlus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
				<autoRepeat>0.1</autoRepeat>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<name>Collider -</name>
				<collider>ColliderMinus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
				<autoRepeat>0.1</autoRepeat>
			</COLLIDER_EVENT>
			<ROTATION>
				<name>Knob position</name>
				<transform>swRotaryLoc</transform>
				<startRotation>0,-145,0</startRotation>
				<endRotation>0,145,0</endRotation>
				<longPath>true</longPath>
				<range>0, 1</range>
				<blend>true</blend>
				<speed>6.0</speed>
			</ROTATION>
			<TEXT_LABEL>
				<name>Top Label</name>
				<transform>TopNameTextObj</transform>
				<fontSize>5.7</fontSize>
				<lineSpacing>0.9</lineSpacing>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Pointer Backlight</name>
				<transform>swRotaryPointerObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_MARK_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Circle Mark and Rotary Circle Backlight</name>
				<transform>swRotaryCircleMarkObj, swRotaryCircleObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<style name="3 pos switch">
			<MODEL id="0">
				<comment>Knob model</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_Model</model>
				<texture>SwitchRotaryDiffuse,ASET/ASET_Props/Control/SwitchRotary/model/SwitchRotaryDiffuse</texture>
			</MODEL>
			<MODEL id="1">
				<comment>Double collider</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_DoubleCollider_L-R</model>
			</MODEL>
			<MODEL id="2">
				<comment>Switcher position marks with text objects</comment>
				<model>ASET/ASET_Props/Control/SwitchRotary/model/Switch_Rotary_3_Marks</model>
			</MODEL>
			<COLLIDER_EVENT id="0">
				<name>Collider +</name>
				<collider>ColliderPlus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<name>Collider -</name>
				<collider>ColliderMinus</collider>
				<sound>ASET/ASET_Props/Sounds/click-027</sound>
				<volume>1</volume>
			</COLLIDER_EVENT>
			<ROTATION>
				<name>Knob position</name>
				<transform>swRotaryLoc</transform>
				<startRotation>0,-55,0</startRotation>
				<endRotation>0,55,0</endRotation>
				<longPath>true</longPath>
				<range>0, 1</range>
				<blend>true</blend>
				<speed>6.0</speed>
			</ROTATION>
			<TEXT_LABEL id="0">
				<name>1 Mark</name>
				<transform>LeftTextObj</transform>
				<fontSize>4</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Right</alignment>
				<anchor>LowerRight</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<name>2 Mark</name>
				<transform>CenterTextObj</transform>
				<fontSize>4</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Center</alignment>
				<anchor>LowerCenter</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<name>3 Mark</name>
				<transform>RightTextObj</transform>
				<fontSize>4</fontSize>
				<font>Liberation Sans</font>
				<style>Bold</style>
				<alignment>Left</alignment>
				<anchor>LowerLeft</anchor>
				<emissive>active</emissive>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
				<activeColor>COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR</activeColor>
				<passiveColor>COLOR_ASET_SWITCHER_NAME_ZEROCOLOR</passiveColor>
			</TEXT_LABEL>
			<COLOR_SHIFT id="0">
				<name>Pointer Backlight</name>
				<transform>swRotaryPointerObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_MARK_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
			<COLOR_SHIFT id="1">
				<name>Circle Mark and Rotary Circle Backlight</name>
				<transform>swRotaryCircleMarkObj, swRotaryCircleObj</transform>
				<passiveColor>0,0,0,255</passiveColor>
				<activeColor>COLOR_ASET_SWITCHER_BORDER_POSITIVECOLOR</activeColor>
				<variable>fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))</variable>
				<blend>true</blend>
				<range>0, 1</range>
			</COLOR_SHIFT>
		</style>
		<prop>
			<name>MAS_swRotary_InstrumentLight</name>
			<style>Rheostat Light</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("Backlight", 0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("Backlight", -0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("Backlight")</variable>
			</ROTATION>
			<TEXT_LABEL>
				<text>INST.$$$PANEL</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_swRotary_LeftCabinLight</name>
			<style>Rheostat Light</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("LeftCabin_Light", 0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("LeftCabin_Light", -0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("LeftCabin_Light")</variable>
			</ROTATION>
			<TEXT_LABEL>
				<text>LEFT$$$CABIN</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_swRotary_RightCabinLight</name>
			<style>Rheostat Light</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("RightCabin_Light", 0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("RightCabin_Light", -0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("RightCabin_Light")</variable>
			</ROTATION>
			<TEXT_LABEL>
				<text>RIGHT$$$CABIN</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS_swRotary_UpperCabinLight</name>
			<style>Rheostat Light</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.AddPersistentClamped("UpperCabin_Light", 0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.AddPersistentClamped("UpperCabin_Light", -0.05, 0, 1)</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("UpperCabin_Light")</variable>
			</ROTATION>
			<TEXT_LABEL>
				<text>UPPER$$$CABIN</text>
			</TEXT_LABEL>
		</prop>
		<prop>
			<name>MAS.swRotary3_IMPModeSelect</name>
			<style>3 pos switch</style>
			<COLLIDER_EVENT id="0">
				<onClick>fc.SetPersistent("MAS_IMP_Mode", fc.GetPersistentAsNumber("MAS_IMP_On") * fc.AddPersistentClamped("MAS_IMP_Mode_Select", 1, 1, 3))</onClick>
			</COLLIDER_EVENT>
			<COLLIDER_EVENT id="1">
				<onClick>fc.SetPersistent("MAS_IMP_Mode", fc.GetPersistentAsNumber("MAS_IMP_On") * fc.AddPersistentClamped("MAS_IMP_Mode_Select", -1, 1, 3))</onClick>
			</COLLIDER_EVENT>
			<ROTATION>
				<variable>fc.GetPersistentAsNumber("MAS_IMP_Mode_Select")</variable>
				<range>1, 3</range>
			</ROTATION>
			<TEXT_LABEL id="0">
				<text>VESSEL</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="1">
				<text>TARGET</text>
			</TEXT_LABEL>
			<TEXT_LABEL id="2">
				<text>LANDING</text>
			</TEXT_LABEL>
		</prop>
	</RotarySwitch>
</PropConfig>
