PROP
{
	name = MAS_ASET_HUD

	MODEL
	{
		model = ASET/ASET_Avionics/ModernPack/ASET_HUD/ASET_HUD
	}

	MODULE
	{
		name = MASComponent

		// Glass UP
		COLLIDER_EVENT
		{
			name = Elevate Switch collider
			collider = HUD_GlassUP_Collider
			onClick = fc.SetPersistent("%AUTOID%-HudEnabled", fc.GetPersistentAsNumber("%AUTOID%-HudOn") * fc.TogglePersistent("%AUTOID%-GlassUp"))
			sound = ASET/ASET_Avionics/ModernPack/Sounds/hud-servo
			volume = 1
		}
		ANIMATION_PLAYER
		{
			name = Elevate Switch animation
			animation = jetHUD
			variable = fc.GetPersistentAsNumber("%AUTOID%-GlassUp")
		}
		ANIMATION_PLAYER
		{
			name = Elevate Switch switch
			animation = ASET_HUD_TumblerGlassUpAnim
			variable = fc.GetPersistentAsNumber("%AUTOID%-GlassUp")
		}

		// Turn ON
		COLLIDER_EVENT
		{
			name = Power Switch collider
			collider = HUD_ON_Collider
			onClick = fc.SetPersistent("%AUTOID%-HudEnabled", fc.GetPersistentAsNumber("%AUTOID%-GlassUp") * fc.TogglePersistent("%AUTOID%-HudOn"))
			sound = ASET/ASET_Avionics/ModernPack/Sounds/hud-tumble
			volume = 1
		}
		ANIMATION_PLAYER
		{
			name = Power Switch animation
			animation = ASET_HUD_TumblerTurnOnAnim
			variable = fc.GetPersistentAsNumber("%AUTOID%-HudOn")
		}

		// Button 03 Pressed
		COLLIDER_EVENT
		{
			name = Warning Button collider
			collider = ButtonBody03
			onClick = fc.TogglePersistent("%AUTOID%-WarningsOn")
			sound = ASET/ASET_Avionics/ModernPack/Sounds/hud-buttonclick
			volume = 1
		}
		ANIMATION_PLAYER
		{
			name = Warning Button animation
			animation = ASET_HUD_Button03PressAnim
			variable = fc.GetPersistentAsNumber("%AUTOID%-WarningsOn")
		}
		COLOR_SHIFT
		{
			name = Warning Button light
			transform = HUD_Button_ONlamp03
			variable = fc.Conditioned(fc.GetPersistentAsNumber("%AUTOID%-WarningsOn"))
			passiveColor = 0,0,0,255
			activeColor = 10,180,10,255
		}

		// MODE Select (Rotary 01)
		COLLIDER_EVENT
		{
			name = Mode 1 Collider
			collider = HUD_Rotary01_C01
			onClick = fc.SetPersistent("%AUTOID%-Mode", 0)
			sound = ASET/ASET_Avionics/ModernPack/Sounds/hud-rotaryclick02
			volume = 1
		}
		COLLIDER_EVENT
		{
			name = Mode 2 Collider
			collider = HUD_Rotary01_C02
			onClick = fc.SetPersistent("%AUTOID%-Mode", 1)
			sound = ASET/ASET_Avionics/ModernPack/Sounds/hud-rotaryclick02
			volume = 1
		}
		COLLIDER_EVENT
		{
			name = Mode 3 Collider
			collider = HUD_Rotary01_C03
			onClick = fc.SetPersistent("%AUTOID%-Mode", 2)
			sound = ASET/ASET_Avionics/ModernPack/Sounds/hud-rotaryclick02
			volume = 1
		}
		ANIMATION
		{
			name = Rotary1 animation
			animation = HUD_Rotary01Anim
			variable = fc.GetPersistentAsNumber("%AUTOID%-Mode")
			range = 0, 2
		}


		// FILTER Mode Select (Rotary 02)
		COLLIDER_EVENT
		{
			name = Filter Mode 1 Collider
			collider = HUD_Rotary02_C01
			onClick = fc.SetPersistent("%AUTOID%-Filter", 0)
			sound = ASET/ASET_Avionics/ModernPack/Sounds/hud-rotaryclick02
			volume = 1
		}
		COLLIDER_EVENT
		{
			name = Filter Mode 2 Collider
			collider = HUD_Rotary02_C02
			onClick = fc.SetPersistent("%AUTOID%-Filter", 1)
			sound = ASET/ASET_Avionics/ModernPack/Sounds/hud-rotaryclick02
			volume = 1
		}
		COLLIDER_EVENT
		{
			name = Filter Mode 3 Collider
			collider = HUD_Rotary02_C03
			onClick = fc.SetPersistent("%AUTOID%-Filter", 2)
			sound = ASET/ASET_Avionics/ModernPack/Sounds/hud-rotaryclick02
			volume = 1
		}
		ANIMATION
		{
			name = Rotary2 animation
			animation = HUD_Rotary02Anim
			variable = fc.GetPersistentAsNumber("%AUTOID%-Filter")
			range = 0, 2
		}
		ANIMATION
		{
			name = Filter animation
			animation = ASET_HUD_GlassFilterAnim
			variable = fc.Conditioned(fc.GetPersistentAsNumber("%AUTOID%-Filter"))
			range = 0, 3
		}

		// ----- Backlight emissive
		COLOR_SHIFT
		{
			name = Backlight
			transform = SwitcherTxtObj, HUD_TumblerLight, HUD_TumblerLight2, ButtonBorder01, ButtonBorder02, ButtonBorder03, RotaryLightMark01, RotaryLightMark02
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			passiveColor = 0, 0, 0, 255
			activeColor = 100, 100, 100, 255
			range = 0, 1
			blend = true
		}

		// Pitch and Roll Ladder --------------------------------------------------------
		ROTATION
		{
			name = Roll
			transform = RollLoc
			startRotation = 0, 0, 179
			endRotation = 0, 0, -179
			variable = fc.Roll()
			range = -179, 179
			blend = true
			longPath = true
		}
		// ladder line toggles and Pitch anim ---------------------------------------------------
		ANIMATION
		{
			name = Ladder pitch animation
			animation = ASET_HUD_PitchLadderAnim
			variable = fc.Pitch()
			range = -60, 60
		}

		// Low Altitude Altimeter  ---------------------------------------------------
		// Bottom Altitude mark anim
		ANIMATION
		{
			name = Bottom altitude marker animation
			animation = ASET_HUD_LowAltAltimeter
			variable = fc.AltitudeBottom()
			range = 0, 300
		}

		// 	GEAR toggle --------------------------------------------------
		TEXT_LABEL
		{
			name = Gear caption
			transform = GEARTxtObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Center
			anchor = UpperCenter
			transformOffset = 0.0216, 0.004
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = GEAR
		}

		// 	BRAKE toggle --------------------------------------------------
		TEXT_LABEL
		{
			name = Brake caption
			transform = BRAKETxtObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Center
			anchor = UpperCenter
			transformOffset = 0.0217, 0.004
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = BRAKE
		}

		// 	SPOILER toggle --------------------------------------------------
		TEXT_LABEL
		{
			name = Spoiler caption
			transform = SPOILERTxtObj
			fontSize = 7.5
			font = InconsolataGo
			style = Bold
			alignment = Center
			anchor = UpperCenter
			transformOffset = 0.0215, 0.004
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = SPOILER
		}

		// Flight Director	--------------------------------------------------
		TRANSLATION
		{
			name = Angle of Attack
			transform = AoALoc
			startTranslation = 0, 0.09, 0
			endTranslation = 0, -0.09, 0
			variable = fc.AngleOfAttack()
			range = -15, 15
			blend = true
		}
		TRANSLATION
		{
			name = Sideslip
			transform = SideSlipLoc
			startTranslation = 0.09, 0, 0
			endTranslation = -0.09, 0, 0
			variable = fc.Sideslip()
			range = -15, 15
			blend = true
		}

		// Vertical Speed Indicator	animation
		ANIMATION
		{
			name = VSI animation
			animation = ASET_HUD_VertSpeedAnim
			variable = fc.VerticalSpeed()
			range = -200, 200
		}

		// Engine control --------------------------------------------------
		// Thrust
		TRANSLATION
		{
			name = Thrust Mark
			transform = ThrustMark
			startTranslation = 0, 0, 0
			endTranslation = 0, 0.0688, 0
			variable = fc.CurrentThrust(true)
			range = 0.0, 1.0
			blend = true
		}

		// Throttle
		TRANSLATION
		{
			name = Throttle Mark
			transform = ThrottleMark
			startTranslation = 0, 0, 0
			endTranslation = 0, 0.0688, 0
			variable = fc.GetThrottle()
			range = 0.0, 1.0
			blend = true
		}

		// Target marker	--------------------------------------------------
		// offset
		TRANSLATION
		{
			name = Target Yaw
			transform = TGToffsetXloc
			startTranslation = 0.086,0,0
			endTranslation = -0.086,0,0
			variable = fc.YawTarget()
			range = -25, 25
			blend = true
		}
		TRANSLATION
		{
			name = Target Pitch
			transform = TGToffsetYloc
			startTranslation = 0,0.086,0
			endTranslation = 0,-0.086,0
			variable = fc.PitchTarget()
			range = -25, 25
			blend = true
		}

		// Target Ground Distance
		TEXT_LABEL
		{
			name = Target Ground distance caption
			transform = TargetGroundDistanceReadoutObj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.000, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = G <=0=> $&$ fc.SIFormatValue(nav.GroundDistanceFromVessel(fc.TargetLatitude(), fc.TargetLongitude()), 6, 1, "", false, true)
		/}

		// Target Distance
		TEXT_LABEL
		{
			name = Target distance caption
			transform = TargetDistanceReadoutObj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.000, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = D <=0=> $&$ fc.SIFormatValue(fc.TargetDistance(), 6, 1, "", false, true)
		}

		// WARNINGs ----------------------------------------------------------------

		// GEAR
		TEXT_LABEL
		{
			name = Gear Warning caption
			transform = GearAlarmTxtObj
			fontSize = 13.75
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.01, 0.00
			emissive = always
			passiveColor = 255, 0, 0, 255
			text = <=0:"G E A R !";"";""=> $&$ (fc.VerticalSpeed() < -0.1) * (1 - fc.GetGear()) * (fc.AltitudeBottom() < 1000) * (fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") * fc.PeriodStep(2))
		}

		// ENGINE
		TEXT_LABEL
		{
			name = Engine Failure caption
			transform = EngineAlarmTxtObj
			fontSize = 13.75
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.00, 0.00
			emissive = always
			passiveColor = 255, 0, 0, 255
			text = <=0:"E N G I N E";"";""=> $&$ (fc.EngineFlameout() * (fc.GetThrottle() > 0)) * (fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") * fc.PeriodStep(2))
		}
		TEXT_LABEL
		{
			name = Engine Failure caption 2
			transform = EngineAlarmTxtObj
			fontSize = 13.75
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.02, -0.03
			emissive = always
			passiveColor = 255, 0, 0, 255
			text = <=0:FAILURE!;"";""=> $&$ (fc.EngineFlameout() * (fc.GetThrottle() > 0)) * (fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") * fc.PeriodStep(2))
		}

		// OVERSPEED
		TEXT_LABEL
		{
			name = Overspeed caption
			transform = OVERSPEEDAlarmTxtObj
			fontSize = 13.75
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.00, 0.00
			emissive = always
			passiveColor = 255, 0, 0, 255
			text = <=0:"O V E R S P E E D !";"";""=> $&$ (fc.SurfaceSpeed() > fc.Max(0.5, fc.TerminalVelocity())) * fc.AltitudeAtmospheric() *  (fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") * fc.PeriodStep(2))
		}

		// STALL
		TEXT_LABEL
		{
			name = Stall caption
			transform = OVERSPEEDAlarmTxtObj
			fontSize = 13.75
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.045, 0.00
			emissive = always
			passiveColor = 255, 0, 0, 255
			text = <=0:"S T A L L !";"";""=> $&$ (far.StallFraction() > 0.2) * (fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") * fc.PeriodStep(2))
		}

		// Digital readouts -----------------------------------------------------

		// VERTICAL SPEED
		TEXT_LABEL
		{
			name = VSpd caption
			transform = VertSpeedReadoutObj
			fontSize = 12
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.002, 0.004
			//transformOffset = 0.005, 0.004
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0,5:0=> $&$ fc.Clamp(fc.VerticalSpeed(), -9999, 9999)
		}

		// AIRSPEED
		TEXT_LABEL
		{
			name = Equivalent airspeed caption
			transform = EASPEEDReadoutObj
			fontSize = 15
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.010, 0.002
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0:000=> $&$ fc.Min(999, fc.EquivalentAirspeed())
		}

		// RADAR ALTITUDE
		TEXT_LABEL
		{
			name = Radar Altitude caption
			transform = RadAltReadoutObj
			fontSize = 8
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.000, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = R <=0:00000=> $&$ fc.Min(99999, fc.AltitudeTerrain(false))
		}

		// ROLL
		TEXT_LABEL
		{
			name = Roll caption
			transform = RollReadoutObj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.000, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0:0.0=> $&$ fc.Roll()
		}

		// PITCH
		TEXT_LABEL
		{
			name = Pitch caption
			transform = PitchReadoutObj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.000, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0:0.0=> $&$ fc.Pitch()
		}

		// GROUND SPEED
		TEXT_LABEL
		{
			name = Ground Speed caption
			transform = GroundSpeedReadoutObj
			fontSize = 8
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.000, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = G/S<=0,6:0.0=> $&$ fc.Min(9999.9, fc.SurfaceSpeed())
		}

		// ALTITUDE
		TEXT_LABEL
		{
			name = Altitude caption
			transform = ALTITUDEReadoutObj
			fontSize = 13
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.0075, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0:00000=> $&$ fc.Min(99999, fc.Altitude())
		}

		// HEADING
		TEXT_LABEL
		{
			name = Heading caption
			transform = HEADINGReadoutObj
			fontSize = 11.9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.005, 0.001
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0:000=> $&$ fc.Heading()
		}

		// Terminal Velocity
		TEXT_LABEL
		{
			name = Terminal Velocity caption
			transform = TerminalVelocityReadoutObj
			fontSize = 11
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.000, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = T <=0:0=> $&$ fc.TerminalVelocity()
		}

		// Atmosphere
		TEXT_LABEL
		{
			name = Atmosphere Depth caption
			transform = AtmoReadoutObj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.000, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = ATM <=0,5:P0=>$&$ fc.AtmosphereDepth()
		}

		// SAS
		TEXT_LABEL
		{
			name = SAS caption
			transform = SASTxtObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = SAS <=0:"ON";"OFF"=>$&$ fc.GetSAS() - 0.5
		}

		// Timer
		TEXT_LABEL
		{
			name = MET caption
			transform = FlightTimerTxtObj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = T:<=0:METd:hh:mm=> $&$ fc.MET()
		}

		// MACH NUMBER
		TEXT_LABEL
		{
			name = Mach number caption
			transform = MachNumberReadoutObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = M <=0:0.000=>$&$ fc.MachNumber()
		}

		// THRUST
		TEXT_LABEL
		{
			name = Thrust caption
			transform = ThrustReadoutObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0:P0=> $&$ fc.CurrentThrust(true)
		}

		// ACCELERATION
		TEXT_LABEL
		{
			name = Acceleration caption
			transform = ACCELReadoutObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0,5:0.0;"";""=> $&$ fc.Acceleration()
		}

		// G-FORCE
		TEXT_LABEL
		{
			name = G-Force caption
			transform = GForceReadoutObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.005, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0:0.00=> $&$ fc.GForce()
		}

		// Fuel
		TEXT_LABEL
		{
			name = Fuel caption
			transform = FUELTxtObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = F  <=0,5:P0=> $&$ fc.PropellantPercent()
		}

		// Air
		TEXT_LABEL
		{
			name = Air caption
			transform = AIRTxtObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = A  <=0,5:P0=> $&$ fc.ResourcePercent("IntakeAir")
		}

		// FLAPS
		TEXT_LABEL
		{
			name = Flaps caption
			transform = FlapsReadoutObj
			fontSize = 10
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = FLAPS $$$    <=0=> $&$ far.GetFlapSetting()
		}

		// Vert speed scale label
		TEXT_LABEL
		{
			name = VSpeed Scale Label
			transform = VertSpeedTXTObj
			fontSize = 4
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.002, 0.0068
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = C$$$L$$$I$$$M$$$B$$$$$$0m/s$$$$$$D$$$E$$$S$$$C$$$E$$$N$$$D
		}

		// HUD Warnings OFF
		TEXT_LABEL
		{
			name = HUD Warnings Off caption 1
			transform = WarningOFFxtObj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0:"";"---"=>$&$ fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") - 0.5
		}
		TEXT_LABEL
		{
			name = HUD Warnings Off caption 2
			transform = WarningOFFxtObj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = <=0:"";"(W)"=>$&$ fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") - 0.5
		}

		// Pitch Scale Numbers ==============================================================

		// +10
		TEXT_LABEL
		{
			name = Ladder +10 L
			transform = PitchTxt10Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 10
		}
		TEXT_LABEL
		{
			name = Ladder +10 R
			transform = PitchTxt10Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 10
		}

		// +20
		TEXT_LABEL
		{
			name = Ladder +20 L
			transform = PitchTxt20Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 20
		}
		TEXT_LABEL
		{
			name = Ladder +20 R
			transform = PitchTxt20Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 20
		}

		// +30
		TEXT_LABEL
		{
			name = Ladder +30 L
			transform = PitchTxt30Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 30
		}
		TEXT_LABEL
		{
			name = Ladder +30 R
			transform = PitchTxt30Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 30
		}

		// +40
		TEXT_LABEL
		{
			name = Ladder +40 L
			transform = PitchTxt40Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 40
		}
		TEXT_LABEL
		{
			name = Ladder +40 R
			transform = PitchTxt40Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 40
		}

		// +50
		TEXT_LABEL
		{
			name = Ladder +50 L
			transform = PitchTxt50Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 50
		}
		TEXT_LABEL
		{
			name = Ladder +50 R
			transform = PitchTxt50Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 50
		}

		// +60
		TEXT_LABEL
		{
			name = Ladder +60 L
			transform = PitchTxt60Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 60
		}
		TEXT_LABEL
		{
			name = Ladder +60 R
			transform = PitchTxt60Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 60
		}

		// -10
		TEXT_LABEL
		{
			name = Ladder -10 L
			transform = PitchTxtM10Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 10
		}
		TEXT_LABEL
		{
			name = Ladder -10 R
			transform = PitchTxtM10Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 10
		}

		// -20
		TEXT_LABEL
		{
			name = Ladder -20 L
			transform = PitchTxtM20Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 20
		}
		TEXT_LABEL
		{
			name = Ladder -20 R
			transform = PitchTxtM20Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 20
		}

		// -30
		TEXT_LABEL
		{
			name = Ladder -30 L
			transform = PitchTxtM30Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 30
		}
		TEXT_LABEL
		{
			name = Ladder -30 R
			transform = PitchTxtM30Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 30
		}

		// -40
		TEXT_LABEL
		{
			name = Ladder -40 L
			transform = PitchTxtM40Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 40
		}
		TEXT_LABEL
		{
			name = Ladder -40 R
			transform = PitchTxtM40Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 40
		}

		// -50
		TEXT_LABEL
		{
			name = Ladder -50 L
			transform = PitchTxtM50Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 50
		}
		TEXT_LABEL
		{
			name = Ladder -50 R
			transform = PitchTxtM50Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 50
		}

		// -60
		TEXT_LABEL
		{
			name = Ladder -60 L
			transform = PitchTxtM60Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = -0.0025, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 60
		}
		TEXT_LABEL
		{
			name = Ladder -60 R
			transform = PitchTxtM60Obj
			fontSize = 9
			font = InconsolataGo
			style = Bold
			alignment = Left
			anchor = UpperLeft
			transformOffset = 0.1375, 0
			emissive = always
			passiveColor = 60, 255, 96, 255
			text = 60
		}
		
		// WARNINGs ----------------------------------------------------------------
		// 	GEAR warning on climb --------------------------------------------------
		MODEL_SCALE
		{
			name = Gear Warning
			transform = GearBorder
			startScale = 0, 0, 0
			endScale = -1, -1, -1
			variable = (fc.VerticalSpeed() > 5) * (fc.EquivalentAirspeed() > 210) * fc.GetGear() * (fc.AltitudeBottom() > 200) * (fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") * fc.PeriodStep(2))
		}

		// 	AIRSPEED Warning anim --------------------------------------------------
		MODEL_SCALE
		{
			name = ASI border flash
			transform = ASIborder
			startScale = 0, 0, 0
			endScale = -1, -1, -1
			variable = (fc.SurfaceSpeed() > fc.Max(0.5, fc.TerminalVelocity())) * fc.AltitudeAtmospheric() * (fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") * fc.PeriodStep(2))
		}

		// 	SPOILER Warning anim --------------------------------------------------
		MODEL_SCALE
		{
			name = Spoiler border flash
			transform = SPOILERBorder
			startScale = 0, 0, 0
			endScale = -1, -1, -1
			variable = (fc.VerticalSpeed() > 10) * far.GetSpoilerSetting() * (fc.GetPersistentAsNumber("%AUTOID%-WarningsOn") * fc.PeriodStep(2))
		}
		MODEL_SCALE
		{
			name = Spoiler border on
			transform = SPOILEREBorderGrp
			startScale = -1, -1, -1
			endScale = 0, 0, 0
			variable = far.GetSpoilerSetting()
		}

		MODEL_SCALE
		{
			name = Brake border on
			transform = BRAKEBorderGrp
			startScale = -1, -1, -1
			endScale = 0, 0, 0
			variable = fc.GetBrakes()
		}

		// 	FLAPS toggle --------------------------------------------------
		MODEL_SCALE
		{
			name = Flaps border on
			transform = FlapsReadoutObj
			startScale = -1, -1, -1
			endScale = 0, 0, 0
			variable = far.GetFlapSetting()
		}

		// Altimeter toggle
		MODEL_SCALE
		{
			name = Bottom altitude marker on
			transform = LowAltScaleGrp
			startScale = 0, 0, 0
			endScale = -1, -1, -1
			variable = fc.AltitudeBottom() > 300
		}

		// 	GEAR toggle --------------------------------------------------
		MODEL_SCALE
		{
			name = Gear border on
			transform = GearBorderGrp
			startScale = -1, -1, -1
			endScale = 0, 0, 0
			variable = fc.GetGear()
		}

		// target marker mod
		MODEL_SCALE
		{
			name = Target Marker on
			transform = TGTIcon
			startScale = -1, -1, -1
			endScale = 0, 0, 0
			variable = (fc.TargetDistanceZ() > 0) + ((fc.TargetDistanceZ() < 0) * fc.PeriodStep(2))
		}

		MODEL_SCALE
		{
			name = Target selected on
			transform = TGTgroupLoc
			startScale = -1, -1, -1
			endScale = 0, 0, 0
			variable = fc.TargetIsVessel()
		}
		
		MODEL_SCALE
		{
			name = HUD Power on
			transform = PowerOFFloc
			startScale = -1, -1, -1
			endScale = 0, 0, 0
			variable = fc.Conditioned(fc.GetPersistentAsNumber("%AUTOID%-HudEnabled"))
		}
	}
}
