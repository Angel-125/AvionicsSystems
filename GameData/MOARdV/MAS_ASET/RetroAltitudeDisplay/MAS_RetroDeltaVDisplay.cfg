PROP
{
	name = MAS_RetroDeltaVDisplay

// model
  	MODEL
	{
		model = ASET/ASET_Props/Instruments/RetroAltitudeDisplay/RetroAltitudeDisplay
		texture = FDAI_ALT_Disp,ASET/ASET_Props/Instruments/RetroAltitudeDisplay/FDAI_ALT_Disp
		texture = SmallLablePlateDiffuse,ASET/ASET_Props/Instruments/RetroAltitudeDisplay/SmallLablePlateDiffuse
		texture = SmallLablePlateEmissive,ASET/ASET_Props/Instruments/RetroAltitudeDisplay/SmallLablePlateEmissive
	}

	MODULE
	{
		name = MASComponent

// Switcher Up label
		TEXT_LABEL
		{
			name = Top Switch Legend
			transform = SwitcherUpLegendTextObj
			fontSize = 3.9
			oneshot = true
			font = Liberation Sans
			style = Bold
			alignment = Center
			anchor = LowerCenter
			emissive = active
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			blend = true
			activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
			passiveColor = COLOR_ASET_SWITCHER_NAME_ZEROCOLOR
			text = STAGE
		}
// Switcher Down label
		TEXT_LABEL
		{
			name = Bottom Switch Legend
			transform = SwitcherDownLegendTextObj
			fontSize = 3.9
			oneshot = true
			font = Liberation Sans
			style = Bold
			alignment = Center
			anchor = UpperCenter
			emissive = active
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			blend = true
			activeColor = COLOR_ASET_SWITCHER_NAME_POSITIVECOLOR
			passiveColor = COLOR_ASET_SWITCHER_NAME_ZEROCOLOR
			text = TOTAL
		}
// 8888888
		TEXT_LABEL
		{
			name = Display Ghost Text
			transform = DispReadoutTextObj2
			fontSize = 11.4
			oneshot = true
			alignment = Right
			anchor = LowerRight
			font  = Digital-7 Mono
			style = Italic
			emissive = active
			variable = fc.Conditioned(1)
			activeColor = COLOR_ASET_NUMINPUT_DISPLAY_GHOSTCOLOR
			passiveColor = COLOR_ASET_NUMINPUT_DISPLAY_GHOSTCOLOR
			text = 88888888
		}
// readout
		TEXT_LABEL
		{
			name = Digital Display
			transform = DispReadoutTextObj
			fontSize = 11.4
			alignment = Right
			anchor = LowerRight
			font  = Digital-7 Mono
			style = Italic
			emissive = active
			variable = fc.Conditioned(1)
			activeColor = COLOR_ASET_NUMINPUT_DISPLAY_POSITIVECOLOR
			passiveColor = COLOR_ASET_NUMINPUT_DISPLAY_NEGATIVECOLOR
			text = <=0:######00=> $&$ 10 * (fc.GetPersistentAsNumber("%AUTOID%") * fc.DeltaV() + (1 - fc.GetPersistentAsNumber("%AUTOID%")) * fc.DeltaVStage())
		}
// decimal
		TEXT_LABEL
		{
			name = Decimal Display
			transform = DispReadoutPointTextObj
			fontSize = 11.4
			alignment = Right
			anchor = LowerRight
			font  = Digital-7 Mono
			style = Italic
			emissive = active
			variable = fc.Conditioned(1)
			activeColor = COLOR_ASET_NUMINPUT_DISPLAY_POSITIVECOLOR
			passiveColor = COLOR_ASET_NUMINPUT_DISPLAY_NEGATIVECOLOR
			text = .
		}
// Mode switcher animation
		COLLIDER_EVENT
		{
			name = Toggle switch
			collider = ALT_SwitchColider
			// By using %AUTOID% and the custom ASETRetroAltitude function, we
			// can install multiples of these props with independent behavior -
			// that is, switching one prop does not switch all of the rest.
			onClick = fc.TogglePersistent("%AUTOID%")
			sound = ASET/ASET_Props/Sounds/tumbleClick01
			volume = 1
		}
		ROTATION
		{
			name = Switch position
			transform = ALT_SwitcherTumbler
			variable = fc.GetPersistentAsNumber("%AUTOID%")
			startRotation = 0,0,0
			endRotation = 70,0,0
			blend = true
			speed = 8.0
		}
//BackLight ========================================================
		COLOR_SHIFT
		{
			name = Switch tumbler mark
			transform = ALT_SwitcherTumblerMark
			passiveColor = 0,0,0,255
			activeColor = COLOR_ASET_SWITCHER_MARK_POSITIVECOLOR
			variable = fc.Conditioned(fc.GetPersistentAsNumber("Backlight"))
			blend = true
		}
		COLOR_SHIFT
		{
			name = Diffuse screen mark
			transform = ScreenObj
			passiveColor = COLOR_ASET_NUMINPUT_DISPLAY_DIFFUSE_PASSIVECOLOR
			activeColor = COLOR_ASET_NUMINPUT_DISPLAY_DIFFUSE_ACTIVECOLOR
			colorName = _Color
			variable = fc.Conditioned(1)
		}
		COLOR_SHIFT
		{
			name = Emissive Screen
			transform = ScreenObj
			passiveColor = COLOR_ASET_NUMINPUT_DISPLAY_EMISSIVE_PASSIVECOLOR
			activeColor = COLOR_ASET_NUMINPUT_DISPLAY_EMISSIVE_ACTIVECOLOR
			colorName = _EmissiveColor
			variable = fc.Conditioned(1)
		}
	}
}
