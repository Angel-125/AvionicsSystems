MAS_PAGE
{
	name = MAS_JSI_BasicMFD_2_Orbit

	softkey = 9, fc.SetPersistent("%AUTOID%", fc.GetPersistent("%AUTOID%-A"))
	softkey = 12, fc.SetPersistent("%AUTOID%", fc.GetPersistent("%AUTOID%-D"))
	softkey = 17, fc.SetPersistent("%AUTOID%", fc.SetPersistent("%AUTOID%-2", "MAS_JSI_BasicMFD_2_OrbitGraphical"))

	IMAGE
	{
		texture = JSI/RasterPropMonitor/Library/Textures/bg01
		position = 0, 0
		size = 640, 640
	}
	TEXT
	{
		name = text row 0
		position = 0, 0
		text = ----Orbit: <=1,-16=> Stage <=0:00=>---- $&$ fc.CurrentStage(); fc.BodyName(fc.CurrentBodyIndex())
	}
	TEXT
	{
		name = text row 1
		position = 0, 1
		text = Vel: <=0,10:SIP###0.0=>m/s  Alt: <=1,8:SIP###0.0=>m  $&$ fc.OrbitSpeed(); fc.Altitude()
	}
	TEXT
	{
		name = text row 2
		position = 0, 2
		text = ------Node in T-----------ΔV:---THROTTLE--------------------------- $$$ $$$----------------------------------------------
	}
	TEXT
	{
		name = text row 3a
		position = 31, 3
		text = |   <=0,5:P0=> $&$ fc.GetThrottle()
	}
	TEXT
	{
		name = text row 3b
		position = 0, 3
		text = <=0,18:MET+yy:ddd:hh:mm:ss.f=>  |<=1,9:0.0=>$&$ fc.ManeuverNodeTime(); fc.ManeuverNodeDV()
		variable = fc.ManeuverNodeExists()
	}
	TEXT
	{
		name = text row 3b1
		position = 2, 3
		text = No Maneuver Node  |   -N/A-
		variable = 1 - fc.ManeuverNodeExists()
	}
	TEXT
	{
		name = text row 5
		position = 1, 5
		text = ApA: <=0,7:SIP###0.0=>m   INC:  <=1,7:0.000=>° $&$ fc.Apoapsis(); fc.Inclination()
	}
	TEXT
	{
		name = text row 6
		position = 1, 6
		text = PeA: <=0,7:SIP###0.0=>m   ECC:  <=1,7:0.000=> $&$ fc.Periapsis(); fc.Eccentricity()
	}
	TEXT
	{
		name = text row 7
		position = 1, 7
		text = ApT: <=0:METyy:ddd:hh:mm:ss.f=> $&$ fc.TimeToAp()
	}
	TEXT
	{
		name = text row 8
		position = 1, 8
		text = PeT: <=0:MET-yy:ddd:hh:mm:ss.f=> $&$ fc.TimeToPe()
	}
	TEXT
	{
		name = text row 9
		position = 2, 9
		text = OP: <=0:METyy:ddd:hh:mm:ss.f=> $&$ fc.OrbitPeriod()
	}
	TEXT
	{
		name = text row 11
		position = 0, 11
		text = Target: <=0=> $&$ fc.TargetName()
		variable = fc.TargetType()
	}
	TEXT
	{
		name = text row 12
		position = 0, 12
		text = Relative inclination: <=0:0.000=>° $&$ fc.TargetRelativeInclination()
		variable = fc.TargetType()
	}
	TEXT
	{
		name = text row 13
		position = 6, 13
		text = To ☋:  <=0:MET-yy:ddd:hh:mm:ss.f=> $&$ fc.TimeToANTarget()
		variable = fc.TargetType()
	}
	TEXT
	{
		name = text row 14
		position = 6, 14
		text = To ☊:  <=0:MET-yy:ddd:hh:mm:ss.f=> $&$ fc.TimeToDNTarget()
		variable = fc.TargetType()
	}
	TEXT
	{
		name = text row 15
		position = 5, 15
		text = T. OP:  <=0:METyy:ddd:hh:mm:ss.f=> $&$ fc.TargetOrbitPeriod()
		variable = fc.TargetType()
	}
	TEXT
	{
		name = text row 16
		position = 0, 16
		text = Time to AP:  <=0:METyy:ddd:hh:mm:ss.f=> $&$ fc.TargetTimeToAp()
		variable = fc.TargetType()
	}
	TEXT
	{
		name = text row 17
		position = 0, 17
		text = Time to PE:  <=0:MET-yy:ddd:hh:mm:ss.f=> $&$ fc.TargetTimeToPe()
		variable = fc.TargetType()
	}
	TEXT
	{
		name = text row 18
		position = 0, 18
		text = Target AP: <=0,8:SIP##0=>m  PE: <=1,8:SIP##0=>m$&$  fc.TargetApoapsis(); fc.TargetPeriapsis()
		variable = fc.TargetType()
	}
	TEXT
	{
		name = text row 19
		position = 6, 19
		text = ECC: <=0:0.000=>     Vel: <=1,8:SIP##0=>m/s$&$ fc.TargetEccentricity(); fc.TargetOrbitSpeed()
		variable = fc.TargetType()
	}
}
