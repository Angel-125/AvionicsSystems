MAS_PAGE
{
	name = MAS_JSI_BasicMFD_NavBall

	softkey = 9, fc.SetPersistent("%AUTOID%", fc.SetPersistent("%AUTOID%-A", "MAS_JSI_BasicMFD_HUD"))

	NAVBALL
	{
		name = PFD navball
		model = JSI/RasterPropMonitor/Library/Components/NavBall/NavBall
		texture = JSI/RasterPropMonitor/Library/Components/NavBall/NavBall000
		size = 430, 430
		iconScale = 1.0
		position = 320, 302
	}
	IMAGE
	{
		texture = JSI/RasterPropMonitor/Library/Components/NavBall/StaticMask
		position = 0, 0
		size = 640, 640
	}

	// the ' is start-of-line marker for now - count white space after that
	TEXT
	{
		position = 1, 0.15625
		text = <=0,6:SIP###0.0=>m $&$ fc.Altitude()
	}
	TEXT
	{
		position = 31, 0.15625
		text = <=0,4:SIP###0=>m/s $&$ fc.SurfaceSpeed()
	}
	TEXT
	{
		position = 16, 2.0625
		text = <=0,6:000.0=>° $&$ fc.Heading()
	}
	TEXT
	{
		position = 1, 3
		text = <=0,6:SIP###0.0=>m$&$ fc.OrbitSpeed()
	}
	TEXT
	{
		position = 31, 3
		text = <=0,4:SIP###0=>m/s $&$ fc.Acceleration()
	}
	TEXT
	{
		position = 2, 5
		text = <=0:ORB;TGT;SRF=> $&$ fc.GetSASSpeedMode()
	}
	TEXT
	{
		position = 0.8125, 7
		text = <=0,6:000.0=>° $&$ fc.Roll()
	}
	TEXT
	{
		position = 32.125, 7
		text = <=0,6:000.0=>° $&$ fc.Pitch()
	}
	TEXT
	{
		position = 1, 8.25
		text = SAS:
	}
	TEXT
	{
		position = 35.5, 8.25
		text = [hw]Gear:
	}
	TEXT
	{
		position = 1, 9
		text = On
		textColor = 0, 255, 0, 255
		variable = fc.GetSAS()
	}
	TEXT
	{
		position = 1, 9
		text = Off
		variable = 1 - fc.GetSAS()
	}
	TEXT
	{
		position = 35.5, 9
		text = Down
		textColor = 0, 255, 0, 255
		variable = fc.GetGear()
	}
	TEXT
	{
		position = 35.5, 9
		text = Up
		variable = 1 - fc.GetGear()
	}
	TEXT
	{
		position = 1, 10.25
		text = RCS:
	}
	TEXT
	{
		position = 35.5, 10.25
		text = [hw]Brakes:
	}
	TEXT
	{
		position = 1, 11
		text = On
		textColor = 0, 255, 0, 255
		variable = fc.GetRCS()
	}
	TEXT
	{
		position = 1, 11
		text = Off
		variable = 1 - fc.GetRCS()
	}
	TEXT
	{
		position = 35.5, 11
		text = On
		textColor = 0, 255, 0, 255
		variable = fc.GetBrakes()
	}
	TEXT
	{
		position = 35.5, 11
		text = Off
		variable = 1 - fc.GetBrakes()
	}
	TEXT
	{
		position = 1, 12.25
		text = [hw]Throttle:
	}
	TEXT
	{
		position = 35.5, 12.25
		text = [hw]Lights:
	}
	TEXT
	{
		position = 1, 13
		text = <=0,5:P0=> $&$ fc.GetThrottle()
	}
	TEXT
	{
		position = 35.5, 13
		text = On
		textColor = 0, 255, 0, 255
		variable = fc.GetLights()
	}
	TEXT
	{
		position = 35.5, 13
		text = Off
		variable = 1 - fc.GetLights()
	}
	TEXT
	{
		position = 1, 14
		text = Burn T:
		variable = fc.ManeuverNodeExists()
	}
	TEXT
	{
		position = 1, 15
		text = <=0:METS.f=>s $&$ fc.ManeuverNodeBurnTime()
		variable = fc.ManeuverNodeExists()
	}
	TEXT
	{
		position = 1, 16
		text = Node in T                       ΔV
		variable = fc.ManeuverNodeExists()
	}
	}
	TEXT
	{
		position = 0, 17
		text = <=0,17:MET+yy:ddd:hh:mm:ss.f=>$&$ fc.ManeuverNodeTime()
		variable = fc.ManeuverNodeExists()
	}
	TEXT
	{
		position = 28, 17
		text = <=0,6:SIP##0.000=>m/s $&$ fc.ManeuverNodeDV()
		variable = fc.ManeuverNodeExists()
	}
	TEXT
	{
		position = 2, 19
		text = <=0,6:SIP##0.000=>m $&$ fc.AltitudeTerrain(false)
	}
	TEXT
	{
		position = 16, 19
		text = <=0,6:SIP##0.000=>m/s $&$ fc.HorizontalSpeed()
	}
	TEXT
	{
		position = 29, 19
		text = <=0,6:SIP##0.00=>m/s $&$ fc.VerticalSpeed()
	}
}
