MAS_PAGE
{
	name = MAS_IFMS_Term_Program1

	onEntry = fc.SetPersistent("%AUTOID%-Timer", 0)

	//--- FXX keys
	softkey = 1, IFMS_ChangeApoapsis(fc.GetPersistentAsNumber("MAS_IFMS_Plan_Buffer") * 1000)
	softkey = 2, IFMS_CircularizeOrbit(fc.GetPersistentAsNumber("MAS_IFMS_Plan_Buffer") * 1000)
	softkey = 3, IFMS_ChangePeriapsis(fc.GetPersistentAsNumber("MAS_IFMS_Plan_Buffer") * 1000)
	softkey = 4, IFMS_PlotTransfer()
	softkey = 5, IFMS_MatchVelocity()
	softkey = 6, IFMS_ClearNode()

	softkey = 7, fc.SetPersistent("%AUTOID%", fc.SetPersistent("%AUTOID%-ProgramPage", "MAS_IFMS_Term_Program0"))
	//softkey = 8, fc.SetPersistent("%AUTOID%-lastChar", "F08")
	//softkey = 9, fc.SetPersistent("%AUTOID%-lastChar", "F09")
	//softkey = 10, fc.SetPersistent("%AUTOID%-lastChar", "F10")
	//softkey = 11, fc.SetPersistent("%AUTOID%-lastChar", "F11")
	softkey = 12, IFMS_ToggleManeuverPilot()

	//--- Top-row soft keys: 13=R01, 20=R08
	// TODO: More program keys
	softkey = 13, fc.SetPersistent("%AUTOID%", fc.SetPersistent("%AUTOID%-ProgramPage", "MAS_IFMS_Term_Program0"))
	softkey = 14, fc.SetPersistent("%AUTOID%", "MAS_IFMS_Term_FDAI")
	//softkey = 15, fc.SetPersistent("%AUTOID%-lastChar", "R03")
	//softkey = 16, fc.SetPersistent("%AUTOID%-lastChar", "R04")
	//softkey = 17, fc.SetPersistent("%AUTOID%-lastChar", "R05")
	//softkey = 18, fc.SetPersistent("%AUTOID%-lastChar", "R06")
	//softkey = 19, fc.SetPersistent("%AUTOID%-lastChar", "R07")
	//softkey = 20, fc.SetPersistent("%AUTOID%-lastChar", "R08")

	//--- D-pad
	// Center
	//softkey = 22, fc.SetPersistent("%AUTOID%-lastChar", "CENTER")
	// Left
	//softkey = 23, fc.SetPersistent("%AUTOID%-lastChar", "Left")
	// Right
	//softkey = 24, fc.SetPersistent("%AUTOID%-lastChar", "Right")
	// Up
	//softkey = 25, fc.SetPersistent("%AUTOID%-lastChar", "Up")
	// Down
	//softkey = 26, fc.SetPersistent("%AUTOID%-lastChar", "Down")
	// Prev
	//softkey = 27, fc.SetPersistent("%AUTOID%-lastChar", "Prev")
	// Next
	//softkey = 28, fc.SetPersistent("%AUTOID%-lastChar", "Next")
	// Zoom - / Back
	//softkey = 29, fc.SetPersistent("%AUTOID%-lastChar", "Zoom -")
	// Zoom + / Select
	//softkey = 30, fc.SetPersistent("%AUTOID%-lastChar", "Zoom +")

	//--- Keyboard
	// 0
	softkey = 48, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 0, 6)
	// 1
	softkey = 49, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 1, 6)
	// 2
	softkey = 50, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 2, 6)
	// 3
	softkey = 51, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 3, 6)
	// 4
	softkey = 52, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 4, 6)
	// 5
	softkey = 53, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 5, 6)
	// 6
	softkey = 54, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 6, 6)
	// 7
	softkey = 55, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 7, 6)
	// 8
	softkey = 56, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 8, 6)
	// 9
	softkey = 57, fc.AppendPersistentDigit("MAS_IFMS_Plan_Buffer", 9, 6)

	// -/_
	//softkey = 45, fc.SetPersistent("%AUTOID%-lastChar", "-")

	// Q
	//softkey = 81, fc.SetPersistent("%AUTOID%-lastChar", "Q")
	// W
	//softkey = 87, fc.SetPersistent("%AUTOID%-lastChar", "W")
	// E
	//softkey = 69, fc.SetPersistent("%AUTOID%-lastChar", "E")
	// R
	//softkey = 82, fc.SetPersistent("%AUTOID%-lastChar", "R")
	// T
	//softkey = 84, fc.SetPersistent("%AUTOID%-lastChar", "T")
	// Y
	//softkey = 89, fc.SetPersistent("%AUTOID%-lastChar", "Y")
	// U
	//softkey = 85, fc.SetPersistent("%AUTOID%-lastChar", "U")
	// I
	//softkey = 73, fc.SetPersistent("%AUTOID%-lastChar", "I")
	// O
	//softkey = 79, fc.SetPersistent("%AUTOID%-lastChar", "O")
	// P
	//softkey = 80, fc.SetPersistent("%AUTOID%-lastChar", "P")

	// +/-
	//softkey = 43, fc.SetPersistent("%AUTOID%-lastChar", "+")

	// A
	//softkey = 65, fc.SetPersistent("%AUTOID%-lastChar", "A")
	// S
	//softkey = 83, fc.SetPersistent("%AUTOID%-lastChar", "S")
	// D
	//softkey = 68, fc.SetPersistent("%AUTOID%-lastChar", "D")
	// F
	//softkey = 70, fc.SetPersistent("%AUTOID%-lastChar", "F")
	// G
	//softkey = 71, fc.SetPersistent("%AUTOID%-lastChar", "G")
	// H
	//softkey = 72, fc.SetPersistent("%AUTOID%-lastChar", "H")
	// J
	//softkey = 74, fc.SetPersistent("%AUTOID%-lastChar", "J")
	// K
	//softkey = 75, fc.SetPersistent("%AUTOID%-lastChar", "K")
	// L
	//softkey = 76, fc.SetPersistent("%AUTOID%-lastChar", "L")

	// [/{
	//softkey = 91, fc.SetPersistent("%AUTOID%-lastChar", "[")
	// ]/}
	//softkey = 93, fc.SetPersistent("%AUTOID%-lastChar", "]")

	// Z
	//softkey = 90, fc.SetPersistent("%AUTOID%-lastChar", "Z")
	// X
	//softkey = 88, fc.SetPersistent("%AUTOID%-lastChar", "X")
	// C
	//softkey = 67, fc.SetPersistent("%AUTOID%-lastChar", "C")
	// V
	//softkey = 86, fc.SetPersistent("%AUTOID%-lastChar", "V")
	// B
	//softkey = 66, fc.SetPersistent("%AUTOID%-lastChar", "B")
	// N
	//softkey = 78, fc.SetPersistent("%AUTOID%-lastChar", "N")
	// M
	//softkey = 77, fc.SetPersistent("%AUTOID%-lastChar", "M")

	// ,/<
	//softkey = 44, fc.SetPersistent("%AUTOID%-lastChar", ",")
	// ./>
	//softkey = 46, fc.SetPersistent("%AUTOID%-lastChar", ".")
	// ;/:
	//softkey = 59, fc.SetPersistent("%AUTOID%-lastChar", ";")

	// Enter
	//softkey = 97, fc.SetPersistent("%AUTOID%-lastChar", "Enter")

	// `/~
	//softkey = 96, fc.SetPersistent("%AUTOID%-lastChar", "`")
	// //?
	//softkey = 47, fc.SetPersistent("%AUTOID%-lastChar", "/")

	// Space
	//softkey = 32, fc.SetPersistent("%AUTOID%-lastChar", "Space")

	// \/|
	//softkey = 92, fc.SetPersistent("%AUTOID%-lastChar", "\")
	// '/"
	//softkey = 39, fc.SetPersistent("%AUTOID%-lastChar", "'")

	// Bksp
	softkey = 98, fc.SetPersistent("MAS_IFMS_Plan_Buffer", fc.Floor(fc.GetPersistentAsNumber("MAS_IFMS_Plan_Buffer") * 0.1))
	// Del
	softkey = 99, fc.SetPersistent("MAS_IFMS_Plan_Buffer", fc.Floor(fc.GetPersistentAsNumber("MAS_IFMS_Plan_Buffer") * 0.1))
	// Break
	softkey = 100, fc.SetPersistent("MAS_IFMS_Plan_Buffer", fc.SetPersistent("MAS_IFMS_Error", 0))
	// Home
	//softkey = 101, fc.SetPersistent("%AUTOID%-lastChar", "Home")
	// End
	//softkey = 102, fc.SetPersistent("%AUTOID%-lastChar", "End")

	TEXT
	{
		name = Title Card
		position = 20, 1.5
		text = Maneuver Planner
		fontSize = 24,48
	}
	
	IMAGE
	{
		name = input buffer border
		texture = MOARdV/MFD/frame6ch112x48
		size = 224, 96
		position = 320, 576
		passiveColor = COLOR_MFD2_TEXT_HIGHLIGHT
		activeColor = COLOR_MFD2_TEXT_RED
		colorVariable = (fc.GetPersistentAsNumber("MAS_IFMS_Error") > fc.UT()) and (fc.PeriodStep(2))
	}
	TEXT
	{
		name = input buffer value
		fontSize = 32,64
		position = 21, 18.5
		textColor = COLOR_MFD2_TEXT_HIGHLIGHT
		text = <=0,6=> $&$ fc.GetPersistentAsNumber("MAS_IFMS_Plan_Buffer")
	}
	
	TEXT
	{
		name = Orbital data caption
		position = 17, 4
		text = Ap  :         km  in$$$Pe  :         km  in$$$Inc :         °$$$dV  :         m/s in
	}
	TEXT
	{
		name = Orbital data values
		text = <=0,9:#,#0.0=>       <=1:METddd/hh:mm:ss=>$&$ fc.Apoapsis() * 0.001; fc.TimeToAp()$$$<=0,9:#,#0.0=>       <=1:METddd/hh:mm:ss=>$&$fc.Periapsis() * 0.001; fc.TimeToPe()$$$<=0,9:0.0=>$&$fc.Inclination()
		position = 22, 4
		textColor = COLOR_MFD2_TEXT_HIGHLIGHT
		variable = fc.ManeuverNodeExists() == 0
	}
	TEXT
	{
		name = Maneuver data values
		text = <=0,9:#,#0.0=>$&$ fc.ManeuverNodeAp() * 0.001$$$<=0,9:#,#0.0=>$&$fc.ManeuverNodePe() * 0.001 $$$<=0,9:0.0=>$&$fc.ManeuverNodeInc()$$$<=0,9:#,#0.0=>       <=1:METddd/hh:mm:ss=> $&$ fc.ManeuverNodeDV(); fc.ManeuverNodeTime()
		position = 22, 4
		textColor = COLOR_MFD2_TEXT_HIGHLIGHT
		variable = fc.ManeuverNodeExists()
	}
	TEXT
	{
		name = Target data caption
		position = 17, 9
		text = Tgt :         km  in$$$Inc :         °
		variable = fc.TargetType() > 0
	}
	TEXT
	{
		name = Target data values
		text = <=0,9:#,#0.0=>       <=1:METddd/hh:mm:ss=>$&$ fc.TargetClosestApproachDistance() * 0.001; fc.TargetClosestApproachTime()$$$<=0,9:0.0=>$&$fc.TargetRelativeInclination()
		position = 22, 9
		textColor = COLOR_MFD2_TEXT_HIGHLIGHT
		variable = (fc.TargetType() > 0) and (fc.ManeuverNodeExists() == 0)
	}
	TEXT
	{
		name = Target maneuver data values
		text = <=0,9:#,#0.0=>       <=1:METddd/hh:mm:ss=>$&$ fc.ManeuverNodeTargetClosestApproachDistance() * 0.001; fc.ManeuverNodeTargetClosestApproachTime()$$$<=0,9:0.0=>$&$fc.ManeuverNodeRelativeInclination()
		position = 22, 9
		textColor = COLOR_MFD2_TEXT_HIGHLIGHT
		variable = (fc.TargetType() > 0) and (fc.ManeuverNodeExists())
	}

	TEXT
	{
		name = F01
		position = 0, 1.25
		text = - [#<=0=>]Change Ap $&$ fc.Select(fc.GetPersistentAsNumber("IFMS_Mnvr_Ap_OK") > fc.UT(), "00ff00", "ffff9b")
	}
	TEXT
	{
		name = F02
		position = 0, 4.75
		text = - [#<=0=>]Circularize $&$ fc.Select(fc.GetPersistentAsNumber("IFMS_Mnvr_Circ_OK") > fc.UT(), "00ff00", "ffff9b")
	}
	TEXT
	{
		name = F03
		position = 0, 8.25
		text = - [#<=0=>]Change Pe $&$ fc.Select(fc.GetPersistentAsNumber("IFMS_Mnvr_Pe_OK") > fc.UT(), "00ff00", "ffff9b")
	}
	TEXT
	{
		name = F04
		position = 0, 11.75
		text = - Plot Transfer
	}
	TEXT
	{
		name = F05
		position = 0, 15.25
		text = - Match Velocity
	}
	TEXT
	{
		name = F06
		position = 0, 18.75
		text = - [#<=0=>]Clear Node $&$ fc.Select(fc.ManeuverNodeExists(), "ffff9b", "afd3ff")
	}
	
	TEXT
	{
		name = F07
		position = 56, 1.25
		text = LAUNCH -
	}
	TEXT
	{
		name = F08
		position = 54, 4.75
		textColor = COLOR_MFD2_TEXT_HIGHLIGHT
		text = MANEUVER [#afd3ff]-
	}
	TEXT
	{
		name = F09
		position = 56, 8.25
		text = F09--- -
	}
	TEXT
	{
		name = F10
		position = 56, 11.75
		text = F10--- -
	}
	TEXT
	{
		name = F11
		position = 56, 15.25
		text = F11--- -
	}
	TEXT
	{
		name = F12
		position = 46, 18.75
		text = [#<=0=>]Engage Autopilot [#afd3ff]- $&$ fc.Select(2 * (mechjeb.ManeuverNodeExecutorActive() + fc.GetManeuverPilotActive()) - fc.ManeuverNodeExists(), "ffff9b", "afd3ff", "00ff00")
	}

	TEXT
	{
		name = MET display
		textfile = MOARdV/MFD/MFD2_MET.txt
		position = 0, 20
	}
	
	// --- Help display - this goes last, so it overwrites everything else when it is visible.
	SUB_PAGE
	{
		name = IFMS Terminal F-key Hint
	}
}
